{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","Averages.js","StatsChart.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","fName","lName","setfName","setlName","searchfName","searchlName","color","_jsxs","className","children","_jsx","onSubmit","value","onChange","event","target","placeholder","type","Results","listPlayers","searched","Fragment","length","Player","team","id","firstName","lastName","teamId","setPlayer","setPlayerStats","setResults","setSearched","teams","statsOptions","method","url","headers","onClick","preventDefault","axios","request","then","resp","data","api","statistics","catch","err","console","log","stats","recentStats","lastGame","enoughGames","minPlayed","parseInt","min","game","gameId","unshift","Lookup","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","results","_useState7","_useState8","fNameOptions","lNameOptions","map","item","playerId","players","Averages","playerOneStats","playerTwoStats","numGames","calculateAvgs","avgs","assists","blks","pts","stls","to","rebounds","totFgm","totFga","fgp","totTpm","totTpa","tpp","plusMinus","assists36","blks36","pts36","stls36","to36","rebounds36","fgm36","fga36","tpm36","tpa36","totalAssists","totalBlks","totalMin","totalPts","totalStls","totalTo","totalRebounds","totalFga","totalFgm","totalTpa","totalTpm","totalPlusMinus","i","blocks","points","steals","turnovers","totReb","fga","fgm","tpa","tpm","toFixed","playerOneAvgs","playerTwoAvgs","Tabs","Tab","options","duration","onShow","responsiveThreshold","Infinity","swipeable","title","StatsChart","setNumGames","playerOne","playerTwo","active","setActive","combinedStats","push","x","p1Pts","p1Asts","p1Reb","p1Tpm","p2Pts","p2Asts","p2Reb","p2Tpm","e","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","Line","dataKey","stroke","XAxis","tick","YAxis","domain","Tooltip","cursor","labelFormatter","label","formatter","name","Legend","align","wrapperStyle","verticalAlign","iconType","payload","App","setPlayerOne","setPlayerTwo","setPlayerOneStats","setPlayerTwoStats","_useState9","_useState10","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"6WAkCeA,EA/BA,SAACC,GAEZ,IAAOC,EAAqED,EAArEC,MAAOC,EAA8DF,EAA9DE,MAAOC,EAAuDH,EAAvDG,SAAUC,EAA6CJ,EAA7CI,SAAUC,EAAmCL,EAAnCK,YAAaC,EAAsBN,EAAtBM,YAAaC,EAASP,EAATO,MAEnE,OACAC,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBC,cAAA,OAAKF,UAAU,SAAQC,SACvBF,eAAA,QAAMI,SAAUP,EAAYK,SAAA,CACxBC,cAAA,SACIE,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIZ,EAASY,EAAMC,OAAOH,MAAM,EAC/CI,YAAY,eAEhBN,cAAA,UAAQF,UAAqB,UAATF,EAAoB,0CAA4C,yCAA2CW,KAAK,SAAQR,SAAC,YAGjJC,cAAA,KAAGF,UAAU,sBAAqBC,SAAC,OACnCC,cAAA,OAAKF,UAAU,SAAQC,SACvBF,eAAA,QAAMI,SAAUN,EAAYI,SAAA,CACxBC,cAAA,SACIE,MAAOX,EACPY,SAAU,SAAAC,GAAK,OAAIX,EAASW,EAAMC,OAAOH,MAAM,EAC/CI,YAAY,cAEhBN,cAAA,UAAQF,UAAqB,UAATF,EAAoB,0CAA4C,yCAA2CW,KAAK,SAAQR,SAAC,cAKzJ,ECVeS,G,OAnBC,SAACnB,GAEb,IAAOoB,EAAyBpB,EAAzBoB,YAAaC,EAAYrB,EAAZqB,SAEpB,OACIb,eAACc,WAAQ,CAAAZ,SAAA,CACLC,cAAA,KAAGF,UAAU,eAAcC,SAAC,kCAC5BF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACpBU,EACAC,GAAkC,GAAtBD,EAAYG,OACtBZ,cAAA,MAAIF,UAAU,4BAA2BC,SACrCC,cAAA,KAAAD,SAAG,uBACG,UAK9B,GCqGec,G,OApHA,SAACxB,GAEZ,IA4FuByB,EA5FfC,EAAwF1B,EAAxF0B,GAAIC,EAAoF3B,EAApF2B,UAAWC,EAAyE5B,EAAzE4B,SAAUC,EAA+D7B,EAA/D6B,OAASC,EAAsD9B,EAAtD8B,UAAWC,EAA2C/B,EAA3C+B,eAAgBC,EAA2BhC,EAA3BgC,WAAYC,EAAejC,EAAfiC,YAI3EC,EAAQ,CACV,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,OAIFC,EAAe,CACjBC,OAAQ,MACRC,IAAK,iEACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,8BA2DzB,OACI3B,cAAA,MAAIF,UAAU,kBAAkB8B,QA7ChB,SAACxB,GACjBA,EAAMyB,iBACNV,EAAUH,EAAY,IAAMC,IAX5BO,EAAkB,KAAKT,EACPe,IAAMC,QAAQP,GACRQ,MAAM,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,IAAIC,UAAU,IAC3DC,OAAO,SAAAC,GAAQC,QAAQC,IAAIF,EAAI,KASbN,MAAM,SAACS,GAItB,IAHA,IAAIC,EAAc,GACdC,EAAWF,EAAM7B,OAAS,EAC1BgC,GAAc,EACXF,EAAY9B,OAAS,IAAI,CAC5B,IAAIiC,EAAYC,SAASL,EAAME,GAAUI,KACrCC,EAAOF,SAASL,EAAME,GAAUM,QAOpC,GALIJ,EAAY,GAAa,MAARG,GACjBN,EAAYQ,QAAQT,EAAME,KAE9BA,GAAW,GAEI,EAAG,CACdC,GAAc,EACdxB,EAAe,IACfD,EAAUH,EAAY,IAAMC,EAAW,kCACvC,KACJ,CACJ,CACI2B,GACAxB,EAAesB,EAGvB,IAEArB,EAAW,IACXC,GAAY,EAChB,EAcyDvB,SACjDF,eAAA,KAAAE,SAAA,CAAG,IAAEiB,EAAU,IAAEC,EAGjBpB,eAAA,QAAMC,UAAU,oBAAmBC,SAAA,CAAC,KAfrBe,EAesCI,EAdrDJ,KAAQS,EACDA,EAAMT,GAGN,OAUuD,WAK1E,GCPeqC,EA1GA,SAAC9D,GAEZ,IA8DIoB,EA9DGU,EAAoC9B,EAApC8B,UAAWC,EAAyB/B,EAAzB+B,eAAgBxB,EAASP,EAATO,MAElCwD,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B9D,EAAKgE,EAAA,GAAE9D,EAAQ8D,EAAA,GACtBE,EAA0BH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAA/BjE,EAAKkE,EAAA,GAAEhE,EAAQgE,EAAA,GAEtBC,EAA8BL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEtC,EAAUsC,EAAA,GAE1BE,EAAgCR,oBAAS,GAAMS,EAAAP,YAAAM,EAAA,GAAxCnD,EAAQoD,EAAA,GAAExC,EAAWwC,EAAA,GAExBC,EAAe,CACftC,OAAQ,MACRC,IAAK,uDACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,8BAIrBqC,EAAe,CACfvC,OAAQ,MACRC,IAAK,sDACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,8BA8DzB,OArBIlB,EADAmD,EAAQhD,OAAS,EACHgD,EAAQK,KAAM,SAAAC,GACxB,OACIlE,cAACa,EAAM,CAEHE,GAAMmD,EAAKC,SACXnD,UAAakD,EAAKlD,UAClBC,SAAYiD,EAAKjD,SACjBC,OAAUgD,EAAKhD,OACfC,UAAaA,EACbC,eAAkBA,EAClBC,WAAcA,EACdC,YAAeA,GARV4C,EAAKC,SAWtB,IAGc,GAKdtE,eAACc,WAAQ,CAAAZ,SAAA,CACLC,cAACZ,EAAM,CACHE,MAASA,EACTC,MAASA,EACTC,SAAYA,EACZC,SAAYA,EACZE,YA/CQ,SAAAS,GAChBA,EAAMyB,iBAENmC,EAAkB,KAAKzE,EACvBuC,IAAMC,QAAQiC,GACbhC,MAAO,SAAAC,GACJZ,EAAWY,EAAKC,KAAKC,IAAIiC,SACzB9C,GAAY,EAChB,IACCe,OAAQ,SAAAC,GACLC,QAAQC,IAAIF,EAChB,GACJ,EAoCY5C,YAjEQ,SAAAU,GAChBA,EAAMyB,iBAENkC,EAAkB,KAAKzE,EACvBwC,IAAMC,QAAQgC,GACb/B,MAAO,SAAAC,GACJZ,EAAWY,EAAKC,KAAKC,IAAIiC,SACzB9C,GAAY,EAEhB,IACCe,OAAQ,SAAAC,GACLC,QAAQC,IAAIF,EAChB,GAEJ,EAoDY1C,MAASA,IAEbI,cAACQ,EAAO,CACJC,YAAeA,EACfC,SAAYA,MAI5B,E,kBC6Ie2D,EAvPE,SAAChF,GAEd,IAAOiF,EAA4CjF,EAA5CiF,eAAgBC,EAA4BlF,EAA5BkF,eAAgBC,EAAYnF,EAAZmF,SAEvCjC,QAAQC,IAAIgC,GAEZ,IAAMC,EAAgB,SAAChC,GAEnB,IAAIiC,EAAO,CACPC,QAAS,EACTC,KAAM,EACN7B,IAAK,EACL8B,IAAK,EACLC,KAAM,EACNC,GAAI,EACJC,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRC,IAAK,EACLC,OAAQ,EACRC,OAAQ,EACRC,IAAK,EACLC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,WAAY,EACZC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,GAGX,GAAIxD,EAAM7B,OAAS,EAAG,CAclB,IAbA,IAAIsF,EAAe,EACfC,EAAY,EACZC,EAAW,EACXC,EAAW,EACXC,EAAY,EACZC,EAAU,EACVC,EAAgB,EAChBC,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAiB,EAEZC,EAAI,GAAKtC,EAAUsC,EAAIrE,EAAM7B,OAAQkG,IAC1CZ,GAAgBpD,SAASL,EAAMqE,GAAGnC,SAClCwB,GAAarD,SAASL,EAAMqE,GAAGC,QAC/BX,GAAYtD,SAASL,EAAMqE,GAAG/D,KAC9BsD,GAAYvD,SAASL,EAAMqE,GAAGE,QAC9BV,GAAaxD,SAASL,EAAMqE,GAAGG,QAC/BV,GAAWzD,SAASL,EAAMqE,GAAGI,WAC7BV,GAAiB1D,SAASL,EAAMqE,GAAGK,QACnCV,GAAY3D,SAASL,EAAMqE,GAAGM,KAC9BV,GAAY5D,SAASL,EAAMqE,GAAGO,KAC9BV,GAAY7D,SAASL,EAAMqE,GAAGQ,KAC9BV,GAAY9D,SAASL,EAAMqE,GAAGS,KAC9BV,GAAkB/D,SAASL,EAAMqE,GAAGvB,WAkCxC,OA/BAb,EAAc,SAAKwB,EAAe1B,GAAUgD,QAAQ,GACpD9C,EAAW,MAAKyB,EAAY3B,GAAUgD,QAAQ,GAC9C9C,EAAU,KAAK0B,EAAW5B,GAAUgD,QAAQ,GAC5C9C,EAAU,KAAK2B,EAAW7B,GAAUgD,QAAQ,GAC5C9C,EAAW,MAAK4B,EAAY9B,GAAUgD,QAAQ,GAC9C9C,EAAS,IAAK6B,EAAU/B,GAAUgD,QAAQ,GAC1C9C,EAAe,UAAK8B,EAAgBhC,GAAUgD,QAAQ,GACtD9C,EAAa,OAAIgC,EACjBhC,EAAa,OAAI+B,EACjB/B,EAAU,KAAMgC,EAAWD,EAAY,KAAKe,QAAQ,GACpD9C,EAAa,OAAIkC,EACjBlC,EAAa,OAAIiC,EAEjBjC,EAAU,IAAIiC,EAAW,GAAMC,EAAWD,EAAY,KAAKa,QAAQ,IAAM,GAAGA,QAAQ,GACpF9C,EAAgB,UAAImC,EAIpBnC,EAAgB,WAAMwB,EAAeE,EAAY,IAAIoB,QAAQ,GAC7D9C,EAAa,QAAMyB,EAAYC,EAAY,IAAIoB,QAAQ,GACvD9C,EAAY,OAAM2B,EAAWD,EAAY,IAAIoB,QAAQ,GACrD9C,EAAa,QAAM4B,EAAYF,EAAY,IAAIoB,QAAQ,GACvD9C,EAAW,MAAM6B,EAAUH,EAAY,IAAIoB,QAAQ,GACnD9C,EAAiB,YAAM8B,EAAgBJ,EAAY,IAAIoB,QAAQ,GAC/D9C,EAAY,OAAMgC,EAAWN,EAAY,IAAIoB,QAAQ,GACrD9C,EAAY,OAAM+B,EAAWL,EAAY,IAAIoB,QAAQ,GACrD9C,EAAY,OAAMkC,EAAWR,EAAY,IAAIoB,QAAQ,GACrD9C,EAAY,OAAMiC,EAAWP,EAAY,IAAIoB,QAAQ,GAI9C9C,CACX,CAEI,OAAOA,CAEf,EAEI+C,EAAgBhD,EAAcH,GAC9BoD,EAAgBjD,EAAcF,GAOlC,OAEQ1E,eAAC8H,OAAI,CAAC7H,UAAU,eAAcC,SAAA,CAC1BC,cAAC4H,MAAG,CACAC,QAAS,CACTC,SAAU,IACVC,OAAQ,KACRC,oBAAqBC,IACrBC,WAAW,GAEXC,MAAM,WAAUpI,SAEhBC,cAAA,SAAOF,UAAU,qBAAoBC,SACjCF,eAAA,SAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAmB,MACzCzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAmB,SAE7C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAwB,WAC9CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAwB,cAElD7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAuB,UAC7CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAuB,aAEjD7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAoB,OAC1CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAoB,UAE9C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAoB,OAC1CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAoB,UAE9C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAkB,KACxCzH,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAkB,QAE5C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAmB,MACzCzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAmB,SAE7C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAmB,MACzCzH,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAmB,SAE7C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAmB,MACzCzH,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAmB,SAE7C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAyB,YAC/CzH,cAAA,MAAAD,SAAI,cACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAyB,sBAK/D1H,cAAC4H,MAAG,CACAC,QAAS,CACTC,SAAU,IACVC,OAAQ,KACRC,oBAAqBC,IACrBC,WAAW,GAEXC,MAAM,SAAQpI,SAEdC,cAAA,SAAOF,UAAU,qBAAoBC,SACjCF,eAAA,SAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAqB,QAC3CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAqB,WAE/C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAA0B,aAChDzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAA0B,gBAEpD7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAyB,YAC/CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAyB,eAEnD7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAsB,SAC5CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAsB,YAEhD7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAsB,SAC5CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAsB,YAEhD7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAoB,OAC1CzH,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAoB,UAE9C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAqB,QAC3CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAqB,WAE/C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAqB,QAC3CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAqB,WAE/C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAqB,QAC3CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAqB,WAE/C7H,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,MAAKC,SAAG0H,EAAqB,QAC3CzH,cAAA,MAAAD,SAAI,QACJC,cAAA,MAAIF,UAAU,MAAKC,SAAG2H,EAAqB,oBAS3E,E,6DC5BeU,G,OAxNI,SAAC/I,GAEhB,IAAOiF,EAA+EjF,EAA/EiF,eAAgBC,EAA+DlF,EAA/DkF,eAAgBC,EAA+CnF,EAA/CmF,SAAU6D,EAAqChJ,EAArCgJ,YAAaC,EAAwBjJ,EAAxBiJ,UAAWC,EAAalJ,EAAbkJ,UAEzEnF,EAA4BC,mBAAS,UAASC,EAAAC,YAAAH,EAAA,GAAvCoF,EAAMlF,EAAA,GAAEmF,EAASnF,EAAA,GA8BpBoF,EAAgB,GAEpB,OAAOlE,GACH,KAAK,EACD,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAGA,IACf4B,EAAcC,KAAK,CAAC,GAE5B,MACJ,KAAK,GACD,IAAK,IAAI7B,EAAI,EAAGA,EAAI,GAAIA,IAChB4B,EAAcC,KAAK,CAAC,GAE5B,MACJ,KAAK,GACD,IAAK,IAAI7B,EAAI,EAAGA,EAAI,GAAIA,IACpB4B,EAAcC,KAAK,CAAC,GAOhC,GAAIrE,EAAe1D,OAAS,EAExB,IADA,IAAIgI,EAAI,EACC9B,EAAI,GAAKtC,EAAUsC,EAAI,GAAIA,IAChC4B,EAAcE,GAAGC,MAAQvE,EAAewC,GAAGE,OAC3C0B,EAAcE,GAAGE,OAASxE,EAAewC,GAAGnC,QAC5C+D,EAAcE,GAAGG,MAAQzE,EAAewC,GAAGK,OAE3CuB,EAAcE,GAAGI,MAAQ1E,EAAewC,GAAGS,IAC3CqB,GAAK,EAKb,GAAIrE,EAAe3D,OAAS,EAExB,IADA,IAAIgI,EAAI,EACC9B,EAAI,GAAKtC,EAAUsC,EAAI,GAAIA,IAChC4B,EAAcE,GAAGK,MAAQ1E,EAAeuC,GAAGE,OAC3C0B,EAAcE,GAAGM,OAAS3E,EAAeuC,GAAGnC,QAC5C+D,EAAcE,GAAGO,MAAQ5E,EAAeuC,GAAGK,OAE3CuB,EAAcE,GAAGQ,MAAQ7E,EAAeuC,GAAGS,IAC3CqB,GAAK,EAMbrG,QAAQC,IAAIkG,GAsDZ,OACI7I,eAACc,WAAQ,CAAAZ,SAAA,CACLF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACnCC,cAAA,OAAKF,UAAsB,UAAV0I,EAAqB,oBAAsB,mBAAoB5G,QAvDvE,SAACyH,GAClBA,EAAExH,iBACF4G,EAAU,SACd,EAoDkH1I,SAAC,WAGvGC,cAAA,OAAKF,UAAsB,YAAV0I,EAAuB,oBAAsB,mBAAoB5G,QArDvE,SAACyH,GACpBA,EAAExH,iBACF4G,EAAU,WACd,EAkDsH1I,SAAC,aAG3GC,cAAA,OAAKF,UAAsB,WAAV0I,EAAsB,oBAAsB,mBAAoB5G,QAnDvE,SAACyH,GACnBA,EAAExH,iBACF4G,EAAU,UACd,EAgDoH1I,SAAC,YAGzGC,cAAA,OAAKF,UAAsB,OAAV0I,EAAkB,oBAAsB,mBAAoB5G,QAjDvE,SAACyH,GACfA,EAAExH,iBACF4G,EAAU,MACd,EA8C4G1I,SAAC,YAGjGC,cAAA,OAAKF,UAA0B,GAAZ0E,EAAgB,oBAAsB,mBAAoB5C,QA/CpE,SAACyH,GAClBA,EAAExH,iBACFwG,EAAY,EAChB,EA4C+GtI,SAAC,iBAGpGC,cAAA,OAAKF,UAA0B,IAAZ0E,EAAiB,oBAAsB,mBAAoB5C,QA7CpE,SAACyH,GACnBA,EAAExH,iBACFwG,EAAY,GAChB,EA0CiHtI,SAAC,kBAGtGC,cAAA,OAAKF,UAA0B,IAAZ0E,EAAiB,oBAAsB,mBAAoB5C,QA3CpE,SAACyH,GACnBA,EAAExH,iBACFwG,EAAY,GAChB,EAwCiHtI,SAAC,qBAI1GC,cAACsJ,IAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIzJ,SAC1CF,eAAC4J,IAAS,CAACvH,KAAMwG,EAAegB,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,GAAI/J,SAAA,CAC7EuE,EAAe1D,OAAS,GAAe,UAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,QAAQC,OAAO,WACzC,KACF1F,EAAe3D,OAAS,GAAe,UAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,QAAQC,OAAO,UACzC,KACF3F,EAAe1D,OAAS,GAAe,YAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,QAAQC,OAAO,WACzC,KACF1F,EAAe3D,OAAS,GAAe,YAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,QAAQC,OAAO,UACzC,KACF3F,EAAe1D,OAAS,GAAe,WAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,SAASC,OAAO,WAC1C,KACF1F,EAAe3D,OAAS,GAAe,WAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,SAASC,OAAO,UAC1C,KACF3F,EAAe1D,OAAS,GAAe,OAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,QAAQC,OAAO,WACzC,KACF1F,EAAe3D,OAAS,GAAe,OAAV4H,EAC/BxI,cAAC+J,IAAI,CAACxJ,KAAK,WAAWyJ,QAAQ,QAAQC,OAAO,UACzC,KACJjK,cAACkK,IAAK,CAACC,MAAQ,IACfnK,cAACoK,IAAK,CAAC7J,KAAK,SAAS8J,OAAQ,CAAC,EApEtB,WACpB,MAAc,UAAV7B,EACO,GAEG,YAAVA,EACO,GAEG,WAAVA,EACO,GAEG,OAAVA,EACO,QADX,CAGJ,KAwDgBxI,cAACsK,IAAO,CACJC,QAAQ,EACRC,eAAmB,SAACC,GAAK,MAAK,EAAE,EAChCC,UAAa,SAACC,EAAMzK,GAAK,MAAK,CAACyK,EAAMnC,EAAO,IAIhDxI,cAAC4K,IAAM,CACHC,MAAM,SAENC,aAAc,CAAChB,KAAM,IACrBiB,cAAc,SACdC,SAAS,OACTC,QACI,CACA,CAAElK,GAAI,KAAMb,MAAOoI,EAAW/H,KAAM,OAAQX,MAAO,UACnD,CAAEmB,GAAI,KAAMb,MAAOqI,EAAWhI,KAAM,OAAQX,MAAO,mBAQ/E,GC9IesL,MAvEf,WAEE,IAAA9H,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCkF,EAAShF,EAAA,GAAE6H,EAAY7H,EAAA,GAC9BE,EAAkCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAAvC+E,EAAS9E,EAAA,GAAE2H,EAAY3H,EAAA,GAE9BC,EAA4CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjDY,EAAcX,EAAA,GAAE0H,EAAiB1H,EAAA,GACxCE,EAA4CR,mBAAS,IAAGS,EAAAP,YAAAM,EAAA,GAAjDU,EAAcT,EAAA,GAAEwH,EAAiBxH,EAAA,GAGxCyH,EAAgClI,mBAAS,GAAEmI,EAAAjI,YAAAgI,EAAA,GAApC/G,EAAQgH,EAAA,GAAEnD,EAAWmD,EAAA,GAU5B,OAJAjJ,QAAQC,IAAI8B,GACZ/B,QAAQC,IAAI+F,GAIV1I,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,MAAKC,SAClBC,cAAA,OAAKF,UAAU,YAAWC,SACxBF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BC,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BC,cAAA,OAAKF,UAAU,yBAAwBC,SACrCC,cAACmD,EAAM,CACLhC,UAAWgK,EACX/J,eAAgBiK,EAChBzL,MAlBD,eAsBPI,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BC,cAAA,OAAKF,UAAU,yBAAwBC,SACnCC,cAACmD,EAAM,CACLhC,UAAWiK,EACXhK,eAAgBkK,EAChB1L,MA1BD,qBAiCXI,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,OAAKF,UAAU,yBAAwBC,SACrCC,cAACoI,EAAU,CACT9D,eAAgBA,EAChBC,eAAgBA,EAChBC,SAAYA,EACZ6D,YAAeA,EAEfC,UAAWA,EACXC,UAAWA,QAIjBvI,cAAA,OAAKF,UAAU,sBAAqBC,SAClCC,cAAA,OAAKF,UAAU,yBAAwBC,SACrCC,cAACqE,EAAQ,CACPC,eAAgBA,EAChBC,eAAgBA,EAChBC,SAAYA,UAMxB,EC/DeiH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3J,MAAK,SAAA4J,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACPnM,cAACoM,IAAMC,WAAU,CAAAtM,SACfC,cAACkL,EAAG,MAENoB,SAASC,eAAe,SAM1Bd,G","file":"static/js/main.021ee1f2.chunk.js","sourcesContent":["import React from 'react';\nimport './Search.css'\n\nconst Search = (props) => {\n\n    const {fName, lName, setfName, setlName, searchfName, searchlName, color} = props;\n    \n    return (\n    <div className=\"searches\">\n        <div className=\"col s5\">\n        <form onSubmit={searchfName}>\n            <input\n                value={fName}\n                onChange={event => setfName(event.target.value)}\n                placeholder=\"First Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-purple\" : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Go</button>\n        </form>\n        </div>\n        <p className=\"col s2 center-align\">OR</p>\n        <div className=\"col s5\">\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-purple\" : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Go</button>\n        </form>\n        </div>\n    </div>\n    )\n}\n\nexport default Search;","import React , { Fragment } from 'react';\nimport './Results.css'\n\nconst Results = (props) => {\n\n    const {listPlayers, searched} = props;\n\n    return (\n        <Fragment>\n            <p className=\"center-align\">Enter full first or last name</p>\n            <ul className=\"collection\">\n                { listPlayers }\n                { searched && listPlayers.length == 0 ? (\n                    <li className=\"collection-item noResults\">\n                        <p>No results found</p>\n                    </li> ) : null\n                }\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\nimport './Player.css'\n\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, teamId , setPlayer, setPlayerStats, setResults, setSearched} = props;\n\n\n    //use to show team in search results\n    const teams = {\n        1: \"ATL\",\n        2: \"BOS\",\n        4: \"BKN\",\n        5: \"CHA\",\n        6: \"CHI\",\n        7: \"CLE\",\n        8: \"DAL\",\n        9: \"DEN\",\n        10: \"DET\",\n        11: \"GSW\",\n        14: \"HOU\",\n        15: \"IND\",\n        16: \"LAC\",\n        17: \"LAL\",\n        19: \"MEM\",\n        20: \"MIA\",\n        21: \"MIL\",\n        22: \"MIN\",\n        23: \"NOP\",\n        24: \"NYK\",\n        25: \"OKC\",\n        26: \"ORL\",\n        27: \"PHI\",\n        28: \"PHX\",\n        29: \"POR\",\n        30: \"SAC\",\n        31: \"SAS\",\n        38: \"TOR\",\n        40: \"UTA\",\n        41: \"WAS\"\n    }\n\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //make stats request, return promise\n    const makeStatsRequest = () => {\n        statsOptions['url'] += id\n        const promise = axios.request(statsOptions)\n        const stats = promise.then( resp => resp.data.api.statistics)\n        .catch( err => {console.log(err)})\n        return stats;\n    }\n\n    //on player select, set player and get recent stats\n    //filtering out games in which they did not play\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(firstName + \" \" + lastName)\n        makeStatsRequest().then( (stats) => {\n            let recentStats = []\n            let lastGame = stats.length - 1\n            let enoughGames = true\n            while (recentStats.length < 25) {\n                let minPlayed = parseInt(stats[lastGame].min)\n                let game = parseInt(stats[lastGame].gameId)\n                //8784 is all-star game\n                if (minPlayed > 0 && game != 8784) {\n                    recentStats.unshift(stats[lastGame]);\n                }\n                lastGame -=1\n                //if less than 25 career games played\n                if (lastGame < 0) {\n                    enoughGames = false\n                    setPlayerStats([])\n                    setPlayer(firstName + \" \" + lastName + \" (not qualified, min 25 games)\")\n                    break\n                }\n            }\n            if (enoughGames) {\n                setPlayerStats(recentStats)\n            }\n            \n        })\n        //clear results\n        setResults([])\n        setSearched(false)\n    }\n\n    //get team short name, to display in search results\n    const teamShortName = (team) => {\n        if (team in teams) {\n            return teams[team];\n        }\n        else {\n            return \"n/a\";\n        }\n    }\n\n\n    return (\n        <li className=\"collection-item\" onClick={handleClick}>\n            <p> {firstName} {lastName} \n            {/* uncomment this to show team name in search results\n            some players are in the database who are no longer in the NBA */}\n            <span className=\"secondary-content\"> { teamShortName(teamId) } </span> \n            </p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats, color} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    const [searched, setSearched] = useState(false);\n\n    let fNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n    \n    let lNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //make request by first name\n    const searchfName = event => {\n        event.preventDefault();\n\n        fNameOptions['url'] += fName;\n        axios.request(fNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            setSearched(true)\n            \n        })\n        .catch ( err => {\n            console.log(err)\n        })\n\n    }\n\n    //make request by last name\n    const searchlName = event => {\n        event.preventDefault()\n        \n        lNameOptions['url'] += lName;\n        axios.request(lNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            setSearched(true)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    } \n\n    //console.log(searched)\n\n    //convert search results to array of Players\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                    key={item.playerId}\n                    id = {item.playerId}\n                    firstName = {item.firstName}\n                    lastName = {item.lastName}\n                    teamId = {item.teamId}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                    setResults = {setResults}\n                    setSearched = {setSearched}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n\n   \n    return (\n        <Fragment>\n            <Search \n                fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchlName}\n                searchfName = {searchfName}\n                color = {color}\n            />\n            <Results \n                listPlayers = {listPlayers}\n                searched = {searched}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import React, { Fragment } from 'react';\nimport './Averages.css'\nimport { Tabs, Tab } from \"react-materialize\"\n\nconst Averages = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames} = props;\n\n    console.log(numGames)\n\n    const calculateAvgs = (stats) => {\n        //avgs object with stats set to 0\n        let avgs = {\n            assists: 0,\n            blks: 0,\n            min: 0,\n            pts: 0,\n            stls: 0,\n            to: 0,\n            rebounds: 0,\n            totFgm: 0,\n            totFga: 0,\n            fgp: 0,\n            totTpm: 0,\n            totTpa: 0,\n            tpp: 0,\n            plusMinus: 0,\n            assists36: 0,\n            blks36: 0,\n            pts36: 0,\n            stls36: 0,\n            to36: 0,\n            rebounds36: 0,\n            fgm36: 0,\n            fga36: 0,\n            tpm36: 0,\n            tpa36: 0\n        }\n        // if stats, sum totals and calculate averages\n        if (stats.length > 0) {\n            let totalAssists = 0;\n            let totalBlks = 0;\n            let totalMin = 0;\n            let totalPts = 0;\n            let totalStls = 0;\n            let totalTo = 0;\n            let totalRebounds = 0;\n            let totalFga = 0;\n            let totalFgm = 0;\n            let totalTpa = 0;\n            let totalTpm = 0;\n            let totalPlusMinus = 0\n            //calculate totals\n            for (let i = 25 - numGames; i < stats.length; i++) {\n                totalAssists += parseInt(stats[i].assists)\n                totalBlks += parseInt(stats[i].blocks)\n                totalMin += parseInt(stats[i].min)\n                totalPts += parseInt(stats[i].points)\n                totalStls += parseInt(stats[i].steals)\n                totalTo += parseInt(stats[i].turnovers)\n                totalRebounds += parseInt(stats[i].totReb)\n                totalFga += parseInt(stats[i].fga)\n                totalFgm += parseInt(stats[i].fgm)\n                totalTpa += parseInt(stats[i].tpa)\n                totalTpm += parseInt(stats[i].tpm)\n                totalPlusMinus += parseInt(stats[i].plusMinus)\n            }\n            //average\n            avgs['assists'] = (totalAssists / numGames).toFixed(1)\n            avgs['blks'] = (totalBlks / numGames).toFixed(1)\n            avgs['min'] = (totalMin / numGames).toFixed(0)\n            avgs['pts'] = (totalPts / numGames).toFixed(1)\n            avgs['stls'] = (totalStls / numGames).toFixed(1)\n            avgs['to'] = (totalTo / numGames).toFixed(1)\n            avgs['rebounds'] = (totalRebounds / numGames).toFixed(1)\n            avgs['totFgm'] = totalFgm\n            avgs['totFga'] = totalFga\n            avgs['fgp'] = ((totalFgm / totalFga) * 100).toFixed(1)\n            avgs['totTpm'] = totalTpm\n            avgs['totTpa'] = totalTpa\n            // should still return 0 if no 3s attempted\n            avgs['tpp'] = totalTpa > 0 ? ((totalTpm / totalTpa) * 100).toFixed(1) : (0).toFixed(1)\n            avgs['plusMinus'] = totalPlusMinus\n\n            //calculate per 36 stats\n\n            avgs['assists36'] = ((totalAssists / totalMin) * 36).toFixed(1);\n            avgs['blks36'] = ((totalBlks / totalMin) * 36).toFixed(1)\n            avgs['pts36'] = ((totalPts / totalMin) * 36).toFixed(1)\n            avgs['stls36'] = ((totalStls / totalMin) * 36).toFixed(1)\n            avgs['to36'] = ((totalTo / totalMin) * 36).toFixed(1)\n            avgs['rebounds36'] = ((totalRebounds / totalMin) * 36).toFixed(1)\n            avgs['fgm36'] = ((totalFgm / totalMin) * 36).toFixed(1)\n            avgs['fga36'] = ((totalFga / totalMin) * 36).toFixed(1)\n            avgs['tpm36'] = ((totalTpm / totalMin) * 36).toFixed(1)\n            avgs['tpa36'] = ((totalTpa / totalMin) * 36).toFixed(1)\n\n\n\n            return avgs\n        }\n        else {\n            return avgs\n        }\n    }\n\n    let playerOneAvgs = calculateAvgs(playerOneStats)\n    let playerTwoAvgs = calculateAvgs(playerTwoStats)\n\n     //per36 = totalStat / totalMinutes   * 36\n\n\n     //M.AutoInit();\n\n    return (\n\n            <Tabs className=\"center-align\">\n                <Tab\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Per Game\"\n                >\n                    <table className=\"centered highlight\">\n                        <tbody>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"pts\"] }</td>\n                                <td>PPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"pts\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"rebounds\"] }</td>\n                                <td>RPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"rebounds\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"assists\"] }</td>\n                                <td>APG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"assists\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"stls\"] }</td>\n                                <td>SPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"stls\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"blks\"] }</td>\n                                <td>BPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"blks\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"to\"] }</td>\n                                <td>TOPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"to\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"min\"] }</td>\n                                <td>MPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"min\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"fgp\"] }</td>\n                                <td>FG %</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"fgp\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"tpp\"] }</td>\n                                <td>3P %</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"tpp\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"plusMinus\"] }</td>\n                                <td>Total +/-</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"plusMinus\"] }</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Tab>\n                <Tab\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Per 36\"\n                >\n                    <table className=\"centered highlight\">\n                        <tbody>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"pts36\"] }</td>\n                                <td>PPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"pts36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"rebounds36\"] }</td>\n                                <td>RPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"rebounds36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"assists36\"] }</td>\n                                <td>APG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"assists36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"stls36\"] }</td>\n                                <td>SPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"stls36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"blks36\"] }</td>\n                                <td>BPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"blks36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"to36\"] }</td>\n                                <td>TOPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"to36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"fgm36\"] }</td>\n                                <td>FGM</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"fgm36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"fga36\"] }</td>\n                                <td>FGA</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"fga36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"tpm36\"] }</td>\n                                <td>3PM</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"tpm36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"tpa36\"] }</td>\n                                <td>3PA</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"tpa36\"] }</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Tab>\n            </Tabs>\n        \n\n    )\n}\n\nexport default Averages;","import axios from 'axios';\nimport React, {Fragment, useState} from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport './StatsChart.css'\n\nconst StatsChart = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames, setNumGames, playerOne, playerTwo} = props;\n\n    const [active, setActive] = useState(\"points\");\n\n     //headers for request by game, currently this request isnt being made\n     const gameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/games/gameId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n     //made this function to display game date and teams played on hover of chart\n     const getGameData = (game) => {\n        gameOptions['url'] += game;\n        axios.request(gameOptions)\n        .then( (resp) => {\n            let gameData = resp.data.api.games[0]\n            let gameDate = gameData.startTimeUTC.slice(0, 10) \n            let homeTeam = gameData.hTeam.shortName\n            let awayTeam = gameData.vTeam.shortName\n            let gameDetails = awayTeam + \" vs. \" + homeTeam + \", \" + gameDate\n            console.log(gameDetails)\n            return gameDetails\n        }) \n    }\n  \n\n    \n    //make array to hold stats for chart\n    let combinedStats = []\n    \n    switch(numGames) {\n        case 5:\n            for (let i = 0; i < 5; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 10:\n            for (let i = 0; i < 10; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 25:\n            for (let i = 0; i < 25; i++) {\n                combinedStats.push({})\n            }\n            break\n        //no default \n    }\n    //populate w stats\n    //wont render the line if no stats\n    if (playerOneStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p1Pts = playerOneStats[i].points;\n            combinedStats[x].p1Asts = playerOneStats[i].assists;\n            combinedStats[x].p1Reb = playerOneStats[i].totReb;\n            //combinedStats[x].p1Game = getGameData(playerOneStats[i].gameId);\n            combinedStats[x].p1Tpm = playerOneStats[i].tpm;\n            x += 1;\n            //any other stats that you want a visualization of\n            //can be added here\n        }\n    }\n    if (playerTwoStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p2Pts = playerTwoStats[i].points;\n            combinedStats[x].p2Asts = playerTwoStats[i].assists;\n            combinedStats[x].p2Reb = playerTwoStats[i].totReb;\n            //combinedStats[x].p2Game = getGameData(playerTwoStats[i].gameId);\n            combinedStats[x].p2Tpm = playerTwoStats[i].tpm;\n            x += 1;\n            //any other stats that you want a visualization of\n            //can be added here\n        }\n    }\n\n    console.log(combinedStats)\n\n    const choosePoints = (e) => {\n        e.preventDefault()\n        setActive(\"points\")\n    }\n\n    const chooseRebounds = (e) => {\n        e.preventDefault()\n        setActive(\"rebounds\")\n    }\n\n    const chooseAssists = (e) => {\n        e.preventDefault()\n        setActive(\"assists\")\n    }\n\n    const chooseTpm = (e) => {\n        e.preventDefault()\n        setActive(\"3PM\")\n    }\n\n    const choose5Games = (e) => {\n        e.preventDefault()\n        setNumGames(5);\n    }\n\n    const choose10Games = (e) => {\n        e.preventDefault()\n        setNumGames(10);\n    }\n\n    const choose25Games = (e) => {\n        e.preventDefault()\n        setNumGames(25);\n    }\n\n    //edit y -axis scale based on chosen stat\n    const checkActiveStat = () => {\n        if (active == \"points\") {\n            return 70;\n        }\n        if (active == \"rebounds\") {\n            return 40;\n        }\n        if (active == \"assists\") {\n            return 30;\n        }\n        if (active == \"3PM\") {\n            return 15;\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"statChips center-align\">\n                <div className={ active == \"points\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={choosePoints}>\n                    Points\n                </div>\n                <div className={ active == \"rebounds\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseRebounds}>\n                    Rebounds\n                </div>\n                <div className={ active == \"assists\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseAssists}>\n                    Assists\n                </div>\n                <div className={ active == \"3PM\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseTpm}>\n                    3P Made\n                </div>\n                <div className = { numGames == 5 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose5Games}>\n                    Last 5 Games\n                </div>\n                <div className = { numGames == 10 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose10Games}>\n                    Last 10 Games\n                </div>\n                <div className = { numGames == 25 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose25Games}>\n                    Last 25 Games\n                </div>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={combinedStats} margin={{ top: 5, right: 50, bottom: 20, left: 0 }}>\n                    { playerOneStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Pts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Pts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Reb\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Reb\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Asts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Asts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"3PM\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Tpm\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"3PM\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Tpm\" stroke=\"green\" />\n                    ) : null }\n                    <XAxis tick = {false} />\n                    <YAxis type=\"number\" domain={[0, checkActiveStat]}/>\n                    <Tooltip \n                        cursor={false} \n                        labelFormatter = { (label) => \"\"}\n                        formatter= { (name, value) => [name, active] }\n                        //content = { <CustomTooltip />}\n                        \n                    />\n                    <Legend \n                        align=\"center\"\n                        //added this bc legend appeared slightly off center\n                        wrapperStyle={{left: 30}}\n                        verticalAlign=\"bottom\" \n                        iconType=\"line\"\n                        payload={\n                            [\n                            { id: 'p1', value: playerOne, type: \"line\", color: 'purple' },\n                            { id: 'p2', value: playerTwo, type: 'line', color: 'green'}\n                            ]\n                        }\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </Fragment>\n    )\n}\n\nexport default StatsChart;","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport Averages from './Averages.js'\nimport StatsChart from './StatsChart.js'\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const [numGames, setNumGames] = useState(5);\n\n  const color1 = \"purple\";\n  const color2 = \"green\"\n\n\n  console.log(playerOneStats)\n  console.log(playerTwo)\n\n\n  return (\n    <div className=\"grey lighten-4\">\n      <div className=\"top\">\n        <div className=\"container\">\n          <div className=\"row mySection\">\n            <div className=\"col s12 m6 l6 p1\">\n              <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerOne}\n                  setPlayerStats={setPlayerOneStats}\n                  color={color1}\n                />\n              </div>\n            </div>\n          <div className=\"col s12 m6 l6 p2\">\n            <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerTwo}\n                  setPlayerStats={setPlayerTwoStats}\n                  color={color2}\n                />\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container \">\n        <div className=\"card hoverable corners\">\n          <StatsChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n            setNumGames = {setNumGames}\n            //for legend\n            playerOne={playerOne}\n            playerTwo={playerTwo}\n          />\n        </div>\n      </div>\n      <div className=\"container mySection\">\n        <div className=\"card hoverable corners\">\n          <Averages\n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n          />\n        </div>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}