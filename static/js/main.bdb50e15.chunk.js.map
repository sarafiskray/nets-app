{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","Charts/Averages.js","Charts/StatsChart.js","Charts/HexagonChart.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","lName","setlName","searchlName","color","_jsx","className","children","_jsxs","onSubmit","value","onChange","event","target","placeholder","type","Results","listPlayers","searched","Fragment","length","Player","id","firstName","lastName","position","setPlayer","setPlayerStats","setResults","setSearched","onClick","preventDefault","season","options","method","url","params","headers","axios","request","then","resp","data","response","makeStatsRequestNew","stats","console","log","recentStats","lastGame","enoughGames","minPlayed","parseInt","min","game","gameId","unshift","Lookup","_useState","useState","_useState2","_slicedToArray","setfName","_useState3","_useState4","_useState5","_useState6","results","_useState7","_useState8","performSearchRequest","inputString","searchOptions","search","catch","error","map","item","_item$leagues","_item$leagues$standar","firstname","lastname","leagues","standard","pos","Averages","playerOneStats","playerTwoStats","numGames","calculateAvgs","avgs","assists","blks","pts","stls","to","rebounds","totFgm","totFga","fgp","totTpm","totTpa","tpp","plusMinus","assists36","blks36","pts36","stls36","to36","rebounds36","fgm36","fga36","tpm36","tpa36","totalAssists","totalBlks","totalMin","totalPts","totalStls","totalTo","totalRebounds","totalFga","totalFgm","totalTpa","totalTpm","totalPlusMinus","i","blocks","points","steals","turnovers","totReb","fga","fgm","tpa","tpm","toFixed","playerOneAvgs","playerTwoAvgs","Tabs","Tab","duration","onShow","responsiveThreshold","Infinity","swipeable","title","StatsChart","setNumGames","playerOne","playerTwo","active","setActive","combinedStats","push","x","p1Pts","p1Asts","p1Reb","p1Tpm","p2Pts","p2Asts","p2Reb","p2Tpm","e","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","Line","dataKey","stroke","XAxis","tick","YAxis","domain","Tooltip","cursor","labelFormatter","label","formatter","name","Legend","align","wrapperStyle","verticalAlign","iconType","payload","HexagonChart","calculateAverage","statsList","statToAverage","slice","reduce","sum","playerOneAverages","def","reb","ast","playerTwoAverages","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","angle","Radar","fill","fillOpacity","App","setPlayerOne","setPlayerTwo","setPlayerOneStats","setPlayerTwoStats","_useState9","_useState10","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdb50e15.chunk.js","sourcesContent":["import React from 'react';\nimport './Search.css'\n\nconst Search = (props) => {\n\n    const {lName, setlName, searchlName, color} = props;\n    \n    //the new search component will just have one search (by last name)\n    //also, for the button, we can plug the color into the className, no need for the conditional\n    return (\n    <div className=\"searches\">\n\n        <div className=\"col s12\">\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-\" + color : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Search</button>\n        </form>\n        </div>\n    </div>\n    )\n}\n\nexport default Search;","import React , { Fragment } from 'react';\nimport './Results.css'\n\nconst Results = (props) => {\n\n    const {listPlayers, searched} = props;\n\n    return (\n        <Fragment>\n            <p className=\"center-align\">Enter at least first three characters of last name</p>\n            <ul className=\"collection\">\n                { listPlayers }\n                { searched && listPlayers.length == 0 ? (\n                    <li className=\"collection-item noResults\">\n                        <p>No results found</p>\n                    </li> ) : null\n                }\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\nimport './Player.css'\n\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, position , setPlayer, setPlayerStats, setResults, setSearched} = props;\n\n\n    //use to show team in search results\n    const teams = {\n        1: \"ATL\",\n        2: \"BOS\",\n        4: \"BKN\",\n        5: \"CHA\",\n        6: \"CHI\",\n        7: \"CLE\",\n        8: \"DAL\",\n        9: \"DEN\",\n        10: \"DET\",\n        11: \"GSW\",\n        14: \"HOU\",\n        15: \"IND\",\n        16: \"LAC\",\n        17: \"LAL\",\n        19: \"MEM\",\n        20: \"MIA\",\n        21: \"MIL\",\n        22: \"MIN\",\n        23: \"NOP\",\n        24: \"NYK\",\n        25: \"OKC\",\n        26: \"ORL\",\n        27: \"PHI\",\n        28: \"PHX\",\n        29: \"POR\",\n        30: \"SAC\",\n        31: \"SAS\",\n        38: \"TOR\",\n        40: \"UTA\",\n        41: \"WAS\"\n    }\n\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //make stats request, return promise\n    const makeStatsRequest = () => {\n        statsOptions['url'] += id\n        const promise = axios.request(statsOptions)\n        const stats = promise.then( resp => resp.data.api.statistics)\n        .catch( err => {console.log(err)})\n        return stats;\n    }\n\n    const makeStatsRequestNew = (id, season) => {\n        const options = {\n            method: 'GET',\n            url: 'https://api-nba-v1.p.rapidapi.com/players/statistics',\n            params: {id: id, season: season},\n            headers: {\n              'X-RapidAPI-Key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n              'X-RapidAPI-Host': 'api-nba-v1.p.rapidapi.com'\n            }\n          };\n\n        const promise = axios.request(options)\n        const stats = promise.then( resp => resp.data.response)\n        return stats;\n    }\n\n    //on player select, set player and get recent stats\n    //filtering out games in which they did not play\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(firstName + \" \" + lastName)\n        makeStatsRequestNew(id, 2022).then( (stats) => {\n            console.log(stats)\n            let recentStats = []\n            let lastGame = stats.length - 1\n            let enoughGames = true\n            while (recentStats.length < 25) {\n                if (stats.length == 0) {\n                    enoughGames = false\n                    setPlayerStats([])\n                    setPlayer(firstName + \" \" + lastName + \" (not qualified, min 25 games)\")\n                    break\n                }\n                let minPlayed = parseInt(stats[lastGame].min)\n                let game = parseInt(stats[lastGame].gameId)\n                //8784 is all-star game\n                if (minPlayed > 0 && game != 8784) {\n                    recentStats.unshift(stats[lastGame]);\n                }\n                lastGame -=1\n                //if less than 25 career games played\n                if (lastGame < 0) {\n                    enoughGames = false\n                    setPlayerStats([])\n                    setPlayer(firstName + \" \" + lastName + \" (not qualified, min 25 games)\")\n                    break\n                }\n            }\n            if (enoughGames) {\n                setPlayerStats(recentStats)\n            }\n            \n        })\n        //clear results\n        setResults([])\n        setSearched(false)\n    }\n\n    //get team short name, to display in search results\n    const teamShortName = (team) => {\n        if (team in teams) {\n            return teams[team];\n        }\n        else {\n            return \"n/a\";\n        }\n    }\n\n\n    return (\n        <li className=\"collection-item\" onClick={handleClick}>\n            <p> {firstName} {lastName} \n            {/* uncomment this to show team name in search results\n            some players are in the database who are no longer in the NBA */}\n            <span className=\"secondary-content\"> { position ?? \"n/a\" } </span> \n            </p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats, color} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    const [searched, setSearched] = useState(false);\n\n    const searchLastNameNew = event => {\n        event.preventDefault();\n        performSearchRequest(lName);\n    }\n\n    const performSearchRequest = (inputString) => {\n        const searchOptions = {\n            method: 'GET',\n            url: 'https://api-nba-v1.p.rapidapi.com/players',\n            headers: {\n              'X-RapidAPI-Key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n              'X-RapidAPI-Host': 'api-nba-v1.p.rapidapi.com'\n            },\n            params: {\n                search: inputString\n            }\n        };\n\n        axios.request(searchOptions)\n        .then((response) => {\n            console.log(response);\n            setResults(response.data.response);\n            setSearched(true);\n          })\n        .catch((error) => {\n            console.log(\"fail!\")          \n        });\n    }\n\n    // //API V1\n\n    // let fNameOptions = {\n    //     method: 'GET',\n    //     url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n    //     headers: {\n    //       'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n    //       'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n    //     }\n    //   };\n    \n    // let lNameOptions = {\n    //     method: 'GET',\n    //     url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n    //     headers: {\n    //       'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n    //       'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n    //     }\n    //   };\n\n    // //make request by first name\n    // const searchfName = event => {\n    //     event.preventDefault();\n\n    //     fNameOptions['url'] += fName;\n    //     axios.request(fNameOptions)\n    //     .then ( resp => {\n    //         setResults(resp.data.api.players)\n    //         setSearched(true)\n            \n    //     })\n    //     .catch ( err => {\n    //         console.log(err)\n    //     })\n\n    // }\n\n    // //make request by last name\n    // const searchlName = event => {\n    //     event.preventDefault()\n        \n    //     lNameOptions['url'] += lName;\n    //     axios.request(lNameOptions)\n    //     .then ( resp => {\n    //         setResults(resp.data.api.players)\n    //         setSearched(true)\n    //     })\n    //     .catch ( err => {\n    //         console.log(err)\n    //     })\n    // } \n\n    //console.log(searched)\n\n    //convert search results to array of Players\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                //these have been changed in an attempt to get the v2 to work - will stop v1 from working\n                    key={item.id}\n                    id = {item.id}\n                    firstName = {item.firstname}\n                    lastName = {item.lastname}\n                    //teamId = {item.teamId}\n                    position = {item.leagues?.standard?.pos}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                    setResults = {setResults}\n                    setSearched = {setSearched}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n\n   \n    return (\n        <Fragment>\n            <Search \n                // fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchLastNameNew}\n                // searchfName = {searchfName}\n                color = {color}\n            />\n            <Results \n                listPlayers = {listPlayers}\n                searched = {searched}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import React, { Fragment } from 'react';\nimport './Averages.css'\nimport { Tabs, Tab } from \"react-materialize\"\n\nconst Averages = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames} = props;\n\n    console.log(numGames)\n\n    const calculateAvgs = (stats) => {\n        //avgs object with stats set to 0\n        let avgs = {\n            assists: 0,\n            blks: 0,\n            min: 0,\n            pts: 0,\n            stls: 0,\n            to: 0,\n            rebounds: 0,\n            totFgm: 0,\n            totFga: 0,\n            fgp: 0,\n            totTpm: 0,\n            totTpa: 0,\n            tpp: 0,\n            plusMinus: 0,\n            assists36: 0,\n            blks36: 0,\n            pts36: 0,\n            stls36: 0,\n            to36: 0,\n            rebounds36: 0,\n            fgm36: 0,\n            fga36: 0,\n            tpm36: 0,\n            tpa36: 0\n        }\n        // if stats, sum totals and calculate averages\n        if (stats.length > 0) {\n            let totalAssists = 0;\n            let totalBlks = 0;\n            let totalMin = 0;\n            let totalPts = 0;\n            let totalStls = 0;\n            let totalTo = 0;\n            let totalRebounds = 0;\n            let totalFga = 0;\n            let totalFgm = 0;\n            let totalTpa = 0;\n            let totalTpm = 0;\n            let totalPlusMinus = 0\n            //calculate totals\n            for (let i = 25 - numGames; i < stats.length; i++) {\n                totalAssists += parseInt(stats[i].assists)\n                totalBlks += parseInt(stats[i].blocks)\n                totalMin += parseInt(stats[i].min)\n                totalPts += parseInt(stats[i].points)\n                totalStls += parseInt(stats[i].steals)\n                totalTo += parseInt(stats[i].turnovers)\n                totalRebounds += parseInt(stats[i].totReb)\n                totalFga += parseInt(stats[i].fga)\n                totalFgm += parseInt(stats[i].fgm)\n                totalTpa += parseInt(stats[i].tpa)\n                totalTpm += parseInt(stats[i].tpm)\n                totalPlusMinus += parseInt(stats[i].plusMinus)\n            }\n            //average\n            avgs['assists'] = (totalAssists / numGames).toFixed(1)\n            avgs['blks'] = (totalBlks / numGames).toFixed(1)\n            avgs['min'] = (totalMin / numGames).toFixed(0)\n            avgs['pts'] = (totalPts / numGames).toFixed(1)\n            avgs['stls'] = (totalStls / numGames).toFixed(1)\n            avgs['to'] = (totalTo / numGames).toFixed(1)\n            avgs['rebounds'] = (totalRebounds / numGames).toFixed(1)\n            avgs['totFgm'] = totalFgm\n            avgs['totFga'] = totalFga\n            avgs['fgp'] = ((totalFgm / totalFga) * 100).toFixed(1)\n            avgs['totTpm'] = totalTpm\n            avgs['totTpa'] = totalTpa\n            // should still return 0 if no 3s attempted\n            avgs['tpp'] = totalTpa > 0 ? ((totalTpm / totalTpa) * 100).toFixed(1) : (0).toFixed(1)\n            avgs['plusMinus'] = totalPlusMinus\n\n            //calculate per 36 stats\n\n            avgs['assists36'] = ((totalAssists / totalMin) * 36).toFixed(1);\n            avgs['blks36'] = ((totalBlks / totalMin) * 36).toFixed(1)\n            avgs['pts36'] = ((totalPts / totalMin) * 36).toFixed(1)\n            avgs['stls36'] = ((totalStls / totalMin) * 36).toFixed(1)\n            avgs['to36'] = ((totalTo / totalMin) * 36).toFixed(1)\n            avgs['rebounds36'] = ((totalRebounds / totalMin) * 36).toFixed(1)\n            avgs['fgm36'] = ((totalFgm / totalMin) * 36).toFixed(1)\n            avgs['fga36'] = ((totalFga / totalMin) * 36).toFixed(1)\n            avgs['tpm36'] = ((totalTpm / totalMin) * 36).toFixed(1)\n            avgs['tpa36'] = ((totalTpa / totalMin) * 36).toFixed(1)\n\n\n\n            return avgs\n        }\n        else {\n            return avgs\n        }\n    }\n\n    let playerOneAvgs = calculateAvgs(playerOneStats)\n    let playerTwoAvgs = calculateAvgs(playerTwoStats)\n\n     //per36 = totalStat / totalMinutes   * 36\n\n\n     //M.AutoInit();\n\n    return (\n\n            <Tabs className=\"center-align\">\n                <Tab\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Per Game\"\n                >\n                    <table className=\"centered highlight\">\n                        <tbody>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"pts\"] }</td>\n                                <td>PPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"pts\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"rebounds\"] }</td>\n                                <td>RPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"rebounds\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"assists\"] }</td>\n                                <td>APG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"assists\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"stls\"] }</td>\n                                <td>SPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"stls\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"blks\"] }</td>\n                                <td>BPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"blks\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"to\"] }</td>\n                                <td>TOPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"to\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"min\"] }</td>\n                                <td>MPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"min\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"fgp\"] }</td>\n                                <td>FG %</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"fgp\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"tpp\"] }</td>\n                                <td>3P %</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"tpp\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"plusMinus\"] }</td>\n                                <td>Total +/-</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"plusMinus\"] }</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Tab>\n                <Tab\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Per 36\"\n                >\n                    <table className=\"centered highlight\">\n                        <tbody>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"pts36\"] }</td>\n                                <td>PPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"pts36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"rebounds36\"] }</td>\n                                <td>RPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"rebounds36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"assists36\"] }</td>\n                                <td>APG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"assists36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"stls36\"] }</td>\n                                <td>SPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"stls36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"blks36\"] }</td>\n                                <td>BPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"blks36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"to36\"] }</td>\n                                <td>TOPG</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"to36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"fgm36\"] }</td>\n                                <td>FGM</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"fgm36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"fga36\"] }</td>\n                                <td>FGA</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"fga36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"tpm36\"] }</td>\n                                <td>3PM</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"tpm36\"] }</td>\n                            </tr>\n                            <tr>\n                                <td className=\"pl1\">{ playerOneAvgs[\"tpa36\"] }</td>\n                                <td>3PA</td>\n                                <td className=\"pl2\">{ playerTwoAvgs[\"tpa36\"] }</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Tab>\n            </Tabs>\n        \n\n    )\n}\n\nexport default Averages;","import axios from 'axios';\nimport React, {Fragment, useState} from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport './StatsChart.css'\n\nconst StatsChart = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames, setNumGames, playerOne, playerTwo} = props;\n\n    const [active, setActive] = useState(\"points\");\n\n     //headers for request by game, currently this request isnt being made\n     const gameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/games/gameId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n     //made this function to display game date and teams played on hover of chart\n     const getGameData = (game) => {\n        gameOptions['url'] += game;\n        axios.request(gameOptions)\n        .then( (resp) => {\n            let gameData = resp.data.api.games[0]\n            let gameDate = gameData.startTimeUTC.slice(0, 10) \n            let homeTeam = gameData.hTeam.shortName\n            let awayTeam = gameData.vTeam.shortName\n            let gameDetails = awayTeam + \" vs. \" + homeTeam + \", \" + gameDate\n            console.log(gameDetails)\n            return gameDetails\n        }) \n    }\n  \n\n    \n    //make array to hold stats for chart\n    let combinedStats = []\n    \n    switch(numGames) {\n        case 5:\n            for (let i = 0; i < 5; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 10:\n            for (let i = 0; i < 10; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 25:\n            for (let i = 0; i < 25; i++) {\n                combinedStats.push({})\n            }\n            break\n        //no default \n    }\n    //populate w stats\n    //wont render the line if no stats\n    if (playerOneStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p1Pts = playerOneStats[i].points;\n            combinedStats[x].p1Asts = playerOneStats[i].assists;\n            combinedStats[x].p1Reb = playerOneStats[i].totReb;\n            //combinedStats[x].p1Game = getGameData(playerOneStats[i].gameId);\n            combinedStats[x].p1Tpm = playerOneStats[i].tpm;\n            x += 1;\n            //any other stats that you want a visualization of\n            //can be added here\n        }\n    }\n    if (playerTwoStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p2Pts = playerTwoStats[i].points;\n            combinedStats[x].p2Asts = playerTwoStats[i].assists;\n            combinedStats[x].p2Reb = playerTwoStats[i].totReb;\n            //combinedStats[x].p2Game = getGameData(playerTwoStats[i].gameId);\n            combinedStats[x].p2Tpm = playerTwoStats[i].tpm;\n            x += 1;\n            //any other stats that you want a visualization of\n            //can be added here\n        }\n    }\n\n    console.log(combinedStats)\n\n    const choosePoints = (e) => {\n        e.preventDefault()\n        setActive(\"points\")\n    }\n\n    const chooseRebounds = (e) => {\n        e.preventDefault()\n        setActive(\"rebounds\")\n    }\n\n    const chooseAssists = (e) => {\n        e.preventDefault()\n        setActive(\"assists\")\n    }\n\n    const chooseTpm = (e) => {\n        e.preventDefault()\n        setActive(\"3PM\")\n    }\n\n    const choose5Games = (e) => {\n        e.preventDefault()\n        setNumGames(5);\n    }\n\n    const choose10Games = (e) => {\n        e.preventDefault()\n        setNumGames(10);\n    }\n\n    const choose25Games = (e) => {\n        e.preventDefault()\n        setNumGames(25);\n    }\n\n    //edit y -axis scale based on chosen stat\n    const checkActiveStat = () => {\n        if (active == \"points\") {\n            return 70;\n        }\n        if (active == \"rebounds\") {\n            return 40;\n        }\n        if (active == \"assists\") {\n            return 30;\n        }\n        if (active == \"3PM\") {\n            return 15;\n        }\n    }\n\n   \n\n    //make chips their own component\n\n    return (\n        <Fragment>\n            <div className=\"statChips center-align\">\n                <div className={ active == \"points\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={choosePoints}>\n                    Points\n                </div>\n                <div className={ active == \"rebounds\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseRebounds}>\n                    Rebounds\n                </div>\n                <div className={ active == \"assists\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseAssists}>\n                    Assists\n                </div>\n                <div className={ active == \"3PM\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseTpm}>\n                    3P Made\n                </div>\n                <div className = { numGames == 5 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose5Games}>\n                    Last 5 Games\n                </div>\n                <div className = { numGames == 10 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose10Games}>\n                    Last 10 Games\n                </div>\n                <div className = { numGames == 25 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose25Games}>\n                    Last 25 Games\n                </div>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={combinedStats} margin={{ top: 5, right: 50, bottom: 20, left: 0 }}>\n                    { playerOneStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Pts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Pts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Reb\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Reb\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Asts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Asts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"3PM\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Tpm\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"3PM\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Tpm\" stroke=\"green\" />\n                    ) : null }\n                    <XAxis tick = {false} />\n                    <YAxis type=\"number\" domain={[0, checkActiveStat]}/>\n                    <Tooltip \n                        cursor={false} \n                        labelFormatter = { (label) => \"\"}\n                        formatter= { (name, value) => [name, active] }\n                        //content = { <CustomTooltip />}\n                        \n                    />\n                    <Legend \n                        align=\"center\"\n                        //added this bc legend appeared slightly off center\n                        wrapperStyle={{left: 30}}\n                        verticalAlign=\"bottom\" \n                        iconType=\"line\"\n                        payload={\n                            [\n                            { id: 'p1', value: playerOne, type: \"line\", color: 'purple' },\n                            { id: 'p2', value: playerTwo, type: 'line', color: 'green'}\n                            ]\n                        }\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </Fragment>\n    )\n}\n\nexport default StatsChart;","import axios from 'axios';\nimport React, {Fragment, useState} from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Legend } from 'recharts';\n\nconst HexagonChart = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames, setNumGames, playerOne, playerTwo} = props;\n\n    // const [playerOneAverages, setPlayerOneAverages] = useState({pts: 0.0, def: 0.0, reb: 0.0, ast: 0.0, min: 0.0, to: 0.0});\n    // const [playerTwoAverages, setPlayerTwoAverages] = useState({pts: 0.0, def: 0.0, reb: 0.0, ast: 0.0, min: 0.0, to: 0.0});\n\n    const calculateAverage = (statsList, statToAverage, numGames) => {\n        statsList = statsList.slice(-numGames);\n        console.log(statsList)\n        const total = statsList.reduce((sum, item) => sum + parseInt(item[statToAverage]), 0);\n        const average = total / statsList.length;\n        return average;\n      }\n\n    let playerOneAverages = {pts: 0.0, def: 0.0, reb: 0.0, ast: 0.0, min: 0.0, to: 0.0};\n    let playerTwoAverages = {pts: 0.0, def: 0.0, reb: 0.0, ast: 0.0, min: 0.0, to: 0.0};   \n    \n    if (playerOneStats.length > 0) {\n      playerOneAverages = \n        {\n          pts: calculateAverage(playerOneStats, \"points\", numGames),\n          def: calculateAverage(playerOneStats, \"steals\", numGames) + calculateAverage(playerOneStats, \"blocks\", numGames),\n          reb: calculateAverage(playerOneStats, \"totReb\", numGames),\n          ast: calculateAverage(playerOneStats, \"assists\", numGames), \n          min: calculateAverage(playerOneStats, \"min\", numGames),\n          to: calculateAverage(playerOneStats, \"turnovers\", numGames)\n        }\n    }\n\n    if (playerTwoStats.length > 0) {\n      playerTwoAverages = \n        {\n          pts: calculateAverage(playerTwoStats, \"points\", numGames),\n          def: calculateAverage(playerTwoStats, \"steals\", numGames) + calculateAverage(playerTwoStats, \"blocks\", numGames),\n          reb: calculateAverage(playerTwoStats, \"totReb\", numGames),\n          ast: calculateAverage(playerTwoStats, \"assists\", numGames), \n          min: calculateAverage(playerTwoStats, \"min\", numGames),\n          to: calculateAverage(playerTwoStats, \"turnovers\", numGames)\n        }\n    }\n\n    console.log(playerOneAverages);\n\n    let data = [\n      {\n        \"stat\": \"Points\",\n        \"p1\": playerOneAverages.pts,\n        \"p2\": playerTwoAverages.pts\n      },\n      {\n        \"stat\": \"Assists\",\n        \"p1\": playerOneAverages.ast * 2,\n        \"p2\": playerTwoAverages.ast * 2\n      },\n      {\n        \"stat\": \"Rebounds\",\n        \"p1\": playerOneAverages.reb * 2,\n        \"p2\": playerTwoAverages.reb * 2\n      },\n      {\n        \"stat\": \"Turnovers\",\n        \"p1\": playerOneAverages.to * 2,\n        \"p2\": playerTwoAverages.to * 2\n      },\n      {\n        \"stat\": \"Minutes\",\n        \"p1\": playerOneAverages.min,\n        \"p2\": playerTwoAverages.min\n      },\n      {\n        \"stat\": \"Steals + Blocks\",\n        \"p1\": playerOneAverages.def * 2,\n        \"p2\": playerTwoAverages.def * 2\n      }\n    ]\n\n      return (\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <RadarChart outerRadius={90} width={730} height={250} data={data}>\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"stat\" />\n            <PolarRadiusAxis tick={false} angle={30} domain={[0, 'dataMax']} />\n            <Radar name={playerOne ?? \"\"} dataKey=\"p1\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n            <Radar name={playerTwo ?? \"\"} dataKey=\"p2\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6} />\n            <Legend payload={[{ id: 'p1', value: playerOne, type: \"rect\", color: '#8884d8' },{ id: 'p2', value: playerTwo, type: 'rect', color: '#82ca9d'}]} \n                    wrapperStyle={{left: 12}}/>\n          </RadarChart>\n        </ResponsiveContainer>\n      )    \n}\n\nexport default HexagonChart;","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport Averages from './Charts/Averages.js'\nimport StatsChart from './Charts/StatsChart.js'\nimport HexagonChart from './Charts/HexagonChart.js'\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const [numGames, setNumGames] = useState(5);\n\n  const color1 = \"purple\";\n  const color2 = \"green\"\n\n  console.log(playerOneStats)\n  console.log(playerTwo)\n\n  return (\n    <div className=\"grey lighten-4\">\n      <div className=\"top\">\n        <div className=\"container\">\n          <div className=\"row mySection\">\n            <div className=\"col s12 m6 l6 p1\">\n              <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerOne}\n                  setPlayerStats={setPlayerOneStats}\n                  color={color1}\n                />\n              </div>\n            </div>\n          <div className=\"col s12 m6 l6 p2\">\n            <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerTwo}\n                  setPlayerStats={setPlayerTwoStats}\n                  color={color2}\n                />\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"card hoverable corners\">\n          <StatsChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n            setNumGames = {setNumGames}\n            //for legend\n            playerOne={playerOne}\n            playerTwo={playerTwo}\n          />\n        </div>\n      </div>\n      <div className=\"container mySection\">\n        <div className=\"card hoverable corners\">\n          <HexagonChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n            setNumGames = {setNumGames}\n            //for legend\n            playerOne={playerOne}\n            playerTwo={playerTwo}\n          />\n        </div>\n      </div>\n      <div className=\"container \">\n        <div className=\"card hoverable corners\">\n          <Averages\n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n          />\n        </div>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}