{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","fName","lName","setfName","setlName","searchfName","searchlName","onSubmit","value","onChange","event","target","placeholder","type","Results","listPlayers","Player","id","firstName","lastName","setPlayer","teamId","setPlayerStats","statsOptions","method","url","headers","onClick","preventDefault","axios","request","then","resp","stats","data","api","statistics","recentStats","lastGameIndex","length","unshift","catch","err","console","log","Lookup","useState","results","setResults","fNameOptions","lNameOptions","map","item","playerId","players","App","playerOne","setPlayerOne","playerTwo","setPlayerTwo","playerOneStats","setPlayerOneStats","playerTwoStats","setPlayerTwoStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17a4b07.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst Search = (props) => {\n\n    const {fName, lName, setfName, setlName, searchfName, searchlName} = props;\n    \n    return (\n    <Fragment>\n        <form onSubmit={searchfName}>\n            <input\n                value={fName}\n                onChange={event => setfName(event.target.value)}\n                placeholder=\"First Name\"\n            />\n            <button type=\"submit\">Search by first name</button>\n        </form>\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button type=\"submit\">Search by last name</button>\n        </form>\n    </Fragment>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Results = (props) => {\n\n    const {listPlayers} = props;\n\n    return(\n        <ul>\n            { listPlayers }\n        </ul>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, teamId , setPlayer, setPlayerStats} = props;\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(id)\n        statsOptions['url'] += id\n        axios.request(statsOptions)\n        .then ( resp => {\n            let stats = resp.data.api.statistics\n            let recentStats = []\n            let lastGameIndex = stats.length - 1\n            while (recentStats.length < 10) {\n                //still need to check if player played in game + all star\n                recentStats.unshift(stats[lastGameIndex])\n                lastGameIndex -=1\n            }\n            setPlayerStats(recentStats)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    }\n\n\n    return (\n        <li onClick={handleClick}>\n            <p> {firstName} {lastName}</p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    let fNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n    \n    let lNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const searchfName = event => {\n        event.preventDefault();\n\n        fNameOptions['url'] += fName;\n        axios.request(fNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            \n        })\n        .catch ( err => {\n            console.log(err)\n        })\n\n    }\n\n    const searchlName = event => {\n        event.preventDefault()\n        \n        lNameOptions['url'] += lName;\n        axios.request(lNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    } \n\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                    key={item.playerId}\n                    id = {item.playerId}\n                    firstName = {item.firstName}\n                    lastName = {item.lastName}\n                    teamId = {item.teamId}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n    //console.log(listPlayers)\n   \n    return (\n        <Fragment>\n            <Search \n                fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchlName}\n                searchfName = {searchfName}\n            />\n            <Results \n                listPlayers = {listPlayers}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport { LineChart, Line } from 'recharts';\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(0);\n  const [playerTwo, setPlayerTwo] = useState(0);\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const numGames = 10;\n\n  console.log(playerOne, playerTwo);\n  console.log(playerOneStats)\n  console.log(playerTwoStats)\n\n  return (\n    <div>\n      <Lookup \n        setPlayer={setPlayerOne}\n        setPlayerStats={setPlayerOneStats}\n      />\n      <Lookup \n        setPlayer={setPlayerTwo}\n        setPlayerStats={setPlayerTwoStats}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}