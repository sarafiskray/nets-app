{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","Averages.js","StatsChart.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","fName","lName","setfName","setlName","searchfName","searchlName","color","className","onSubmit","value","onChange","event","target","placeholder","type","Results","listPlayers","Player","id","firstName","lastName","setPlayer","teamId","setPlayerStats","setResults","statsOptions","method","url","headers","onClick","preventDefault","axios","request","then","resp","data","api","statistics","catch","err","console","log","stats","recentStats","lastGame","length","minPlayed","parseInt","min","game","gameId","unshift","Lookup","useState","results","fNameOptions","lNameOptions","map","item","playerId","players","Averages","playerOneStats","playerTwoStats","numGames","calculateAvgs","avgs","assists","blks","pts","stls","to","rebounds","fgp","tpp","plusMinus","totalAssists","totalBlks","totalMin","totalPts","totalStls","totalTo","totalRebounds","totalFga","totalFgm","totalTpa","totalTpm","totalPlusMinus","i","blocks","points","steals","turnovers","totReb","fga","fgm","tpa","tpm","toFixed","playerOneAvgs","playerTwoAvgs","StatsChart","setNumGames","active","setActive","combinedStats","push","x","p1Pts","p1Asts","p1Reb","p1GameId","p2Pts","p2Asts","p2Reb","p2GameId","e","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","Line","dataKey","stroke","XAxis","tick","YAxis","domain","Tooltip","cursor","App","setPlayerOne","setPlayerTwo","setPlayerOneStats","setPlayerTwoStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee5c7087.chunk.js","sourcesContent":["import React from 'react';\nimport './Search.css'\n\nconst Search = (props) => {\n\n    const {fName, lName, setfName, setlName, searchfName, searchlName, color} = props;\n    \n    return (\n    <div className=\"searches\">\n        <div className=\"col s5\">\n        <form onSubmit={searchfName}>\n            <input\n                value={fName}\n                onChange={event => setfName(event.target.value)}\n                placeholder=\"First Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-purple\" : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Go</button>\n        </form>\n        </div>\n        <p className=\"col s2 center-align\">OR</p>\n        <div className=\"col s5\">\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-purple\" : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Go</button>\n        </form>\n        </div>\n    </div>\n    )\n}\n\nexport default Search;","import React , { Fragment } from 'react';\n\nconst Results = (props) => {\n\n    const {listPlayers} = props;\n\n    return (\n        <Fragment>\n            <p className=\"center-align\">Enter full first or last name</p>\n            <ul className=\"collection\">\n                { listPlayers }\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\nimport './Player.css'\n\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, teamId , setPlayer, setPlayerStats, setResults} = props;\n\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const makeStatsRequest = () => {\n        statsOptions['url'] += id\n        const promise = axios.request(statsOptions)\n        const stats = promise.then( resp => resp.data.api.statistics)\n        .catch( err => {console.log(err)})\n        return stats;\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(id)\n        makeStatsRequest().then( (stats) => {\n            let recentStats = []\n            let lastGame = stats.length - 1\n            while (recentStats.length < 25) {\n                let minPlayed = parseInt(stats[lastGame].min)\n                let game = parseInt(stats[lastGame].gameId)\n                //8784 is all-star game\n                if (minPlayed > 0 && game != 8784) {\n                    recentStats.unshift(stats[lastGame]);\n                }\n                lastGame -=1\n            }\n            setPlayerStats(recentStats)\n        })\n        setResults([])\n    }\n\n\n    return (\n        <li className=\"collection-item\" onClick={handleClick}>\n            <p> {firstName} {lastName} </p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats, color} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    let fNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n    \n    let lNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const searchfName = event => {\n        event.preventDefault();\n\n        fNameOptions['url'] += fName;\n        axios.request(fNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            \n        })\n        .catch ( err => {\n            console.log(err)\n        })\n\n    }\n\n    const searchlName = event => {\n        event.preventDefault()\n        \n        lNameOptions['url'] += lName;\n        axios.request(lNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    } \n\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                    key={item.playerId}\n                    id = {item.playerId}\n                    firstName = {item.firstName}\n                    lastName = {item.lastName}\n                    teamId = {item.teamId}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                    setResults = {setResults}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n\n   \n    return (\n        <Fragment>\n            <Search \n                fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchlName}\n                searchfName = {searchfName}\n                color = {color}\n            />\n            <Results \n                listPlayers = {listPlayers}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import React from 'react';\nimport './Averages.css'\n\nconst Averages = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames} = props;\n\n    console.log(numGames)\n\n    const calculateAvgs = (stats) => {\n        //think about what to return if no player is selected\n        //empty object or object with all stats set to zero\n        let avgs = {\n            assists: 0,\n            blks: 0,\n            min: 0,\n            pts: 0,\n            stls: 0,\n            to: 0,\n            rebounds: 0,\n            fgp: 0,\n            tpp: 0,\n            plusMinus: 0\n        }\n        if (stats.length > 0) {\n            let totalAssists = 0;\n            let totalBlks = 0;\n            let totalMin = 0;\n            let totalPts = 0;\n            let totalStls = 0;\n            let totalTo = 0;\n            let totalRebounds = 0;\n            let totalFga = 0;\n            let totalFgm = 0;\n            let totalTpa = 0;\n            let totalTpm = 0;\n            let totalPlusMinus = 0\n            //calculate totals\n            for (let i = 25 - numGames; i < stats.length; i++) {\n                totalAssists += parseInt(stats[i].assists)\n                totalBlks += parseInt(stats[i].blocks)\n                totalMin += parseInt(stats[i].min)\n                totalPts += parseInt(stats[i].points)\n                totalStls += parseInt(stats[i].steals)\n                totalTo += parseInt(stats[i].turnovers)\n                totalRebounds += parseInt(stats[i].totReb)\n                totalFga += parseInt(stats[i].fga)\n                totalFgm += parseInt(stats[i].fgm)\n                totalTpa += parseInt(stats[i].tpa)\n                totalTpm += parseInt(stats[i].tpm)\n                totalPlusMinus += parseInt(stats[i].plusMinus)\n            }\n            //change to div by numGames\n            avgs['assists'] = (totalAssists / numGames).toFixed(1)\n            avgs['blks'] = (totalBlks / numGames).toFixed(1)\n            avgs['min'] = (totalMin / numGames).toFixed(1)\n            avgs['pts'] = (totalPts / numGames).toFixed(1)\n            avgs['stls'] = (totalStls / numGames).toFixed(1)\n            avgs['to'] = (totalTo / numGames).toFixed(1)\n            avgs['rebounds'] = (totalRebounds / numGames).toFixed(1)\n            avgs['fgp'] = ((totalFgm / totalFga) * 100).toFixed(1)\n            avgs['tpp'] = ((totalTpm / totalTpa) * 100).toFixed(1)\n            avgs['plusMinus'] = totalPlusMinus\n            return avgs\n        }\n        else {\n            return avgs\n        }\n    }\n\n    let playerOneAvgs = calculateAvgs(playerOneStats)\n    let playerTwoAvgs = calculateAvgs(playerTwoStats)\n\n    return (\n        <table className=\"centered highlight\">\n            <tbody>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"pts\"] }</td>\n                    <td>PPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"pts\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"rebounds\"] }</td>\n                    <td>RPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"rebounds\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"assists\"] }</td>\n                    <td>APG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"assists\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"stls\"] }</td>\n                    <td>SPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"stls\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"blks\"] }</td>\n                    <td>BPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"blks\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"to\"] }</td>\n                    <td>TOPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"to\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"min\"] }</td>\n                    <td>MPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"min\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"fgp\"] }</td>\n                    <td>FG %</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"fgp\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"tpp\"] }</td>\n                    <td>3P %</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"tpp\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"plusMinus\"] }</td>\n                    <td>Total +/-</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"plusMinus\"] }</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Averages;","import axios from 'axios';\nimport React, {Fragment, useState} from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './StatsChart.css'\nimport CustomTooltip from './CustomTooltip.js'\n\nconst StatsChart = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames, setNumGames } = props;\n\n    const [active, setActive] = useState(\"points\");\n  \n\n    //console.log(numGames)\n    //make empty array\n    let combinedStats = []\n    \n    switch(numGames) {\n        case 10:\n            for (let i = 0; i < 10; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 25:\n            for (let i = 0; i < 25; i++) {\n                combinedStats.push({})\n            }\n            break\n        //no default \n    }\n    //populate w stats\n    //wont render the line if no stats\n    if (playerOneStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p1Pts = playerOneStats[i].points;\n            combinedStats[x].p1Asts = playerOneStats[i].assists;\n            combinedStats[x].p1Reb = playerOneStats[i].totReb;\n            combinedStats[x].p1GameId = playerOneStats[i].gameId;\n            x += 1;\n            //can always add more\n        }\n    }\n    if (playerTwoStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p2Pts = playerTwoStats[i].points;\n            combinedStats[x].p2Asts = playerTwoStats[i].assists;\n            combinedStats[x].p2Reb = playerTwoStats[i].totReb;\n            combinedStats[x].p2GameId = playerTwoStats[i].gameId;\n            x += 1;\n            //can always add more\n        }\n    }\n\n    console.log(combinedStats)\n\n    const choosePoints = (e) => {\n        e.preventDefault()\n        setActive(\"points\")\n    }\n\n    const chooseRebounds = (e) => {\n        e.preventDefault()\n        setActive(\"rebounds\")\n    }\n\n    const chooseAssists = (e) => {\n        e.preventDefault()\n        setActive(\"assists\")\n    }\n\n    const choose10Games = (e) => {\n        e.preventDefault()\n        setNumGames(10);\n    }\n\n    const choose25Games = (e) => {\n        e.preventDefault()\n        setNumGames(25);\n    }\n\n    //edit y -axis scale\n    const checkActiveStat = () => {\n        if (active == \"points\") {\n            return 70;\n        }\n        if (active == \"rebounds\") {\n            return 40;\n        }\n        if (active == \"assists\") {\n            return 30;\n        }\n    }\n\n    const gameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/games/gameId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //for custom tooltip\n    const getGameData = (game) => {\n        gameOptions['url'] += game;\n        axios.request(gameOptions)\n        .then( (resp) => {\n            let gameData = resp.data.api.games[0]\n            let gameDate = gameData.startTimeUTC.slice(0, 10) \n            let homeTeam = gameData.hTeam.shortName\n            let awayTeam = gameData.vTeam.shortName\n            console.log([gameDate, homeTeam, awayTeam])\n            return [gameDate, homeTeam, awayTeam]\n        }) \n    }\n\n    \n    //use playerOneStats.length > 0 : jsx\n\n    return (\n        <Fragment>\n            <div className=\"statChips center-align\">\n                <div className={ active == \"points\" ? \"chip statSelected\" : \"chip\"} onClick={choosePoints}>\n                    Points\n                </div>\n                <div className={ active == \"rebounds\" ? \"chip statSelected\" : \"chip\"} onClick={chooseRebounds}>\n                    Rebounds\n                </div>\n                <div className={ active == \"assists\" ? \"chip statSelected\" : \"chip\"} onClick={chooseAssists}>\n                    Assists\n                </div>\n                <div className = { numGames == 10 ? \"chip statSelected\" : \"chip\"} onClick={choose10Games}>\n                    Last 10 Games\n                </div>\n                <div className = { numGames == 25 ? \"chip statSelected\" : \"chip\"} onClick={choose25Games}>\n                    Last 25 Games\n                </div>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={combinedStats} margin={{ top: 5, right: 50, bottom: 5, left: 0 }}>\n                    { playerOneStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Pts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Pts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Reb\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Reb\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Asts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Asts\" stroke=\"green\" />\n                    ) : null }\n                    <XAxis tick = {false} />\n                    <YAxis type=\"number\" domain={[0, checkActiveStat]}/>\n                    <Tooltip cursor={false} /* content={<CustomTooltip />}  *//>\n                </LineChart>\n            </ResponsiveContainer>\n        </Fragment>\n    )\n}\n\nexport default StatsChart;","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport Averages from './Averages.js'\nimport StatsChart from './StatsChart.js'\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(0);\n  const [playerTwo, setPlayerTwo] = useState(0);\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const [numGames, setNumGames] = useState(10);\n\n  const color1 = \"purple\";\n  const color2 = \"green\"\n\n  const teams = {\n    1: \"ATL\",\n    2: \"BOS\",\n    4: \"BKN\",\n    5: \"CHA\",\n    6: \"CHI\",\n    7: \"CLE\",\n    8: \"DAL\",\n    9: \"DEN\",\n    10: \"DET\",\n    11: \"GSW\",\n    14: \"HOU\",\n    15: \"IND\",\n    16: \"LAC\",\n    17: \"LAL\",\n    19: \"MEM\",\n    20: \"MIA\",\n    21: \"MIL\",\n    22: \"MIN\",\n    23: \"NOP\",\n    24: \"NYK\",\n    25: \"OKC\",\n    26: \"ORL\",\n    27: \"PHI\",\n    28: \"PHX\",\n    29: \"POR\",\n    30: \"SAC\",\n    31: \"SAS\",\n    38: \"TOR\",\n    40: \"UTA\",\n    41: \"WAS\"\n  }\n\n\n  console.log(playerOneStats)\n  console.log(playerTwoStats)\n\n\n  return (\n    <div className=\"grey lighten-4\">\n      <div className=\"top\">\n        <div className=\"container\">\n          <div className=\"row mySection\">\n            <div className=\"col s12 m6 l6 p1\">\n              <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerOne}\n                  setPlayerStats={setPlayerOneStats}\n                  color={color1}\n                />\n              </div>\n            </div>\n          <div className=\"col s12 m6 l6 p2\">\n            <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerTwo}\n                  setPlayerStats={setPlayerTwoStats}\n                  color={color2}\n                />\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container \">\n        <div className=\"card hoverable corners\">\n          <StatsChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n            setNumGames = {setNumGames}\n          />\n        </div>\n      </div>\n      <div className=\"container mySection\">\n        <div className=\"card hoverable corners\">\n          <Averages\n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n          />\n        </div>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}