{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","Averages.js","StatsChart.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","fName","lName","setfName","setlName","searchfName","searchlName","className","onSubmit","value","onChange","event","target","placeholder","type","Results","listPlayers","Player","id","firstName","lastName","setPlayer","teamId","setPlayerStats","numGames","console","log","statsOptions","method","url","headers","onClick","preventDefault","axios","request","then","resp","data","api","statistics","catch","err","stats","recentStats","lastGame","length","minPlayed","parseInt","min","game","gameId","unshift","Lookup","useState","results","setResults","fNameOptions","lNameOptions","map","item","playerId","players","Averages","playerOneStats","playerTwoStats","calculateAvgs","avgs","assists","blks","pts","stls","to","rebounds","fgp","tpp","plusMinus","totalAssists","totalBlks","totalMin","totalPts","totalStls","totalTo","totalRebounds","totalFga","totalFgm","totalTpa","totalTpm","totalPlusMinus","i","blocks","points","steals","turnovers","totReb","fga","fgm","tpa","tpm","toFixed","playerOneAvgs","playerTwoAvgs","StatsChart","setNumGames","active","setActive","combinedStats","push","p1Pts","p1Asts","p1Reb","p2Pts","p2Asts","p2Reb","e","LineChart","width","height","Line","dataKey","stroke","XAxis","tick","YAxis","domain","Tooltip","cursor","App","setPlayerOne","setPlayerTwo","setPlayerOneStats","setPlayerTwoStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b6a34fc.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport './Search.css'\n\nconst Search = (props) => {\n\n    const {fName, lName, setfName, setlName, searchfName, searchlName} = props;\n    \n    return (\n    <Fragment>\n        <div className=\"col s5\">\n        <form onSubmit={searchfName}>\n            <input\n                value={fName}\n                onChange={event => setfName(event.target.value)}\n                placeholder=\"First Name\"\n            />\n            <button className=\"btn grey\" type=\"submit\">Go</button>\n        </form>\n        </div>\n        <p className=\"col s2\">OR</p>\n        <div className=\"col s5\">\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button className=\"btn grey\" type=\"submit\">Go</button>\n        </form>\n        </div>\n    </Fragment>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Results = (props) => {\n\n    const {listPlayers} = props;\n\n    return(\n        <ul>\n            { listPlayers }\n        </ul>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, teamId , setPlayer, setPlayerStats, numGames} = props;\n\n    console.log(numGames)\n\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const makeStatsRequest = () => {\n        statsOptions['url'] += id\n        const promise = axios.request(statsOptions)\n        const stats = promise.then( resp => resp.data.api.statistics)\n        .catch( err => {console.log(err)})\n        return stats;\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(id)\n        makeStatsRequest().then( (stats) => {\n            let recentStats = []\n            let lastGame = stats.length - 1\n            while (recentStats.length < 10) {\n                let minPlayed = parseInt(stats[lastGame].min)\n                let game = parseInt(stats[lastGame].gameId)\n                //8784 is all-star game\n                if (minPlayed > 0 && game != 8784) {\n                    recentStats.unshift(stats[lastGame]);\n                }\n                lastGame -=1\n            }\n            setPlayerStats(recentStats)\n        })\n    }\n\n\n    return (\n        <li onClick={handleClick}>\n            <p> {firstName} {lastName}</p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats, numGames} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    let fNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n    \n    let lNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const searchfName = event => {\n        event.preventDefault();\n\n        fNameOptions['url'] += fName;\n        axios.request(fNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            \n        })\n        .catch ( err => {\n            console.log(err)\n        })\n\n    }\n\n    const searchlName = event => {\n        event.preventDefault()\n        \n        lNameOptions['url'] += lName;\n        axios.request(lNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    } \n\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                    key={item.playerId}\n                    id = {item.playerId}\n                    firstName = {item.firstName}\n                    lastName = {item.lastName}\n                    teamId = {item.teamId}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n\n   \n    return (\n        <Fragment>\n            <Search \n                fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchlName}\n                searchfName = {searchfName}\n            />\n            <Results \n                listPlayers = {listPlayers}\n                numGames = {numGames}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import React from 'react';\n\nconst Averages = (props) => {\n\n    const {playerOneStats, playerTwoStats} = props;\n\n    const calculateAvgs = (stats) => {\n        //think about what to return if no player is selected\n        //empty object or object with all stats set to zero\n        let avgs = {\n            assists: 0,\n            blks: 0,\n            min: 0,\n            pts: 0,\n            stls: 0,\n            to: 0,\n            rebounds: 0,\n            fgp: 0,\n            tpp: 0,\n            plusMinus: 0\n        }\n        if (stats.length > 0) {\n            let totalAssists = 0;\n            let totalBlks = 0;\n            let totalMin = 0;\n            let totalPts = 0;\n            let totalStls = 0;\n            let totalTo = 0;\n            let totalRebounds = 0;\n            let totalFga = 0;\n            let totalFgm = 0;\n            let totalTpa = 0;\n            let totalTpm = 0;\n            let totalPlusMinus = 0\n            //calculate totals\n            for (let i = 0; i < stats.length; i++) {\n                totalAssists += parseInt(stats[i].assists)\n                totalBlks += parseInt(stats[i].blocks)\n                totalMin += parseInt(stats[i].min)\n                totalPts += parseInt(stats[i].points)\n                totalStls += parseInt(stats[i].steals)\n                totalTo += parseInt(stats[i].turnovers)\n                totalRebounds += parseInt(stats[i].totReb)\n                totalFga += parseInt(stats[i].fga)\n                totalFgm += parseInt(stats[i].fgm)\n                totalTpa += parseInt(stats[i].tpa)\n                totalTpm += parseInt(stats[i].tpm)\n                totalPlusMinus += parseInt(stats[i].plusMinus)\n            }\n            //change to div by numGames\n            avgs['assists'] = totalAssists / 10\n            avgs['blks'] = totalBlks / 10\n            avgs['min'] = totalMin / 10\n            avgs['pts'] = totalPts / 10\n            avgs['stls'] = totalStls / 10\n            avgs['to'] = totalTo / 10\n            avgs['rebounds'] = totalRebounds / 10\n            avgs['fgp'] = ((totalFgm / totalFga) * 100).toFixed(1)\n            avgs['tpp'] = ((totalTpm / totalTpa) * 100).toFixed(1)\n            avgs['plusMinus'] = totalPlusMinus\n            return avgs\n        }\n        else {\n            return avgs\n        }\n    }\n\n    let playerOneAvgs = calculateAvgs(playerOneStats)\n    let playerTwoAvgs = calculateAvgs(playerTwoStats)\n\n    return (\n        <table className=\"centered highlight\">\n            <tbody>\n                <tr>\n                    <td>{ playerOneAvgs[\"pts\"] }</td>\n                    <td>PPG</td>\n                    <td>{ playerTwoAvgs[\"pts\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"rebounds\"] }</td>\n                    <td>RPG</td>\n                    <td>{ playerTwoAvgs[\"rebounds\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"assists\"] }</td>\n                    <td>APG</td>\n                    <td>{ playerTwoAvgs[\"assists\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"stls\"] }</td>\n                    <td>SPG</td>\n                    <td>{ playerTwoAvgs[\"stls\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"blks\"] }</td>\n                    <td>BPG</td>\n                    <td>{ playerTwoAvgs[\"blks\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"to\"] }</td>\n                    <td>TOPG</td>\n                    <td>{ playerTwoAvgs[\"to\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"min\"] }</td>\n                    <td>MPG</td>\n                    <td>{ playerTwoAvgs[\"min\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"fgp\"] }</td>\n                    <td>FG %</td>\n                    <td>{ playerTwoAvgs[\"fgp\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"tpp\"] }</td>\n                    <td>3P %</td>\n                    <td>{ playerTwoAvgs[\"tpp\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"plusMinus\"] }</td>\n                    <td>Total +/-</td>\n                    <td>{ playerTwoAvgs[\"plusMinus\"] }</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Averages;","import React, {Fragment, useState} from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './StatsChart.css'\n\nconst StatsChart = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames, setNumGames } = props;\n\n    const [active, setActive] = useState(\"points\");\n  \n\n    //make empty array\n    let combinedStats = []\n    for (let i = 0; i < 10; i++) {\n            combinedStats.push({})\n    }\n    //populate w stats\n    //wont render the line if no stats\n    if (playerOneStats.length > 0) {\n        for (let i = 0; i < 10; i++) {\n            combinedStats[i].p1Pts = playerOneStats[i].points;\n            combinedStats[i].p1Asts = playerOneStats[i].assists;\n            combinedStats[i].p1Reb = playerOneStats[i].totReb;\n            //can always add more\n        }\n    }\n    if (playerTwoStats.length > 0) {\n        for (let i = 0; i < 10; i++) {\n            combinedStats[i].p2Pts = playerTwoStats[i].points;\n            combinedStats[i].p2Asts = playerTwoStats[i].assists;\n            combinedStats[i].p2Reb = playerTwoStats[i].totReb;\n            //can always add more\n        }\n    }\n\n    //console.log(combinedStats)\n\n    const choosePoints = (e) => {\n        e.preventDefault()\n        setActive(\"points\")\n    }\n\n    const chooseRebounds = (e) => {\n        e.preventDefault()\n        setActive(\"rebounds\")\n    }\n\n    const chooseAssists = (e) => {\n        e.preventDefault()\n        setActive(\"assists\")\n    }\n\n    const choose10Games = (e) => {\n        e.preventDefault()\n        setNumGames(10);\n    }\n\n    const choose25Games = (e) => {\n        e.preventDefault()\n        setNumGames(25);\n    }\n\n\n\n    \n    //use playerOneStats.length > 0 : jsx\n\n    return (\n        <Fragment>\n            <div className=\"statChips center-align\">\n                <div className={ active == \"points\" ? \"chip statSelected\" : \"chip\"} onClick={choosePoints}>\n                    Points\n                </div>\n                <div className={ active == \"rebounds\" ? \"chip statSelected\" : \"chip\"} onClick={chooseRebounds}>\n                    Rebounds\n                </div>\n                <div className={ active == \"assists\" ? \"chip statSelected\" : \"chip\"} onClick={chooseAssists}>\n                    Assists\n                </div>\n                {/* <div className = { numGames == 10 ? \"chip statSelected\" : \"chip\"} onClick={choose10Games}>\n                    Last 10 Games\n                </div>\n                <div className = { numGames == 25 ? \"chip statSelected\" : \"chip\"} onClick={choose25Games}>\n                    Last 25 Games\n                </div> */}\n            </div>\n            <LineChart width={800} height = {400} data={combinedStats}>\n                { playerOneStats.length > 0 && active == \"points\" ? (\n                <Line type=\"monotone\" dataKey=\"p1Pts\" stroke=\"purple\"/>\n                ) : null }\n                { playerTwoStats.length > 0 && active == \"points\" ? (\n                <Line type=\"monotone\" dataKey=\"p2Pts\" stroke=\"green\" />\n                ) : null }\n                { playerOneStats.length > 0 && active == \"rebounds\" ? (\n                <Line type=\"monotone\" dataKey=\"p1Reb\" stroke=\"purple\"/>\n                ) : null }\n                { playerTwoStats.length > 0 && active == \"rebounds\" ? (\n                <Line type=\"monotone\" dataKey=\"p2Reb\" stroke=\"green\" />\n                ) : null }\n                { playerOneStats.length > 0 && active == \"assists\" ? (\n                <Line type=\"monotone\" dataKey=\"p1Asts\" stroke=\"purple\"/>\n                ) : null }\n                { playerTwoStats.length > 0 && active == \"assists\" ? (\n                <Line type=\"monotone\" dataKey=\"p2Asts\" stroke=\"green\" />\n                ) : null }\n                <XAxis tick = {false} />\n                <YAxis type=\"number\" domain={[0, 80]}/>\n                <Tooltip cursor={false} />\n            </LineChart>\n        </Fragment>\n    )\n}\n\nexport default StatsChart;","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport Averages from './Averages.js'\nimport StatsChart from './StatsChart.js'\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(0);\n  const [playerTwo, setPlayerTwo] = useState(0);\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const [numGames, setNumGames] = useState(10);\n\n\n  console.log(playerOneStats)\n  console.log(playerTwoStats)\n\n\n  return (\n    <div className=\"grey lighten-4\">\n      <div className=\"top grey lighten-2 z-depth-1\">\n        <div className=\"container\">\n          <div className=\"row mySection\">\n            <div className=\"col s12 m6 l6 p1\">\n              <Lookup \n                setPlayer={setPlayerOne}\n                setPlayerStats={setPlayerOneStats}\n              />\n            </div>\n            <div className=\"col s12 m6 l6 p2\">\n              <Lookup \n                setPlayer={setPlayerTwo}\n                setPlayerStats={setPlayerTwoStats}\n                numGames={numGames}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container mySection\">\n          <StatsChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n            setNumGames = {setNumGames}\n          />\n      </div>\n      <div className=\"container mySection\">\n        <div className=\"card\">\n          <Averages\n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n          />\n        </div>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}