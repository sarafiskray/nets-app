{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","Averages.js","StatsChart.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","fName","lName","setfName","setlName","searchfName","searchlName","color","className","onSubmit","value","onChange","event","target","placeholder","type","Results","listPlayers","searched","length","Player","team","id","firstName","lastName","teamId","setPlayer","setPlayerStats","setResults","setSearched","teams","1","2","4","5","6","7","8","9","10","11","14","15","16","17","19","20","21","22","23","24","25","26","27","28","29","30","31","38","40","41","statsOptions","method","url","headers","onClick","preventDefault","axios","request","then","resp","data","api","statistics","catch","err","console","log","stats","recentStats","lastGame","enoughGames","minPlayed","parseInt","min","game","gameId","unshift","Lookup","useState","results","fNameOptions","lNameOptions","map","item","playerId","players","Averages","playerOneStats","playerTwoStats","numGames","calculateAvgs","avgs","assists","blks","pts","stls","to","rebounds","totFgm","totFga","fgp","totTpm","totTpa","tpp","plusMinus","totalAssists","totalBlks","totalMin","totalPts","totalStls","totalTo","totalRebounds","totalFga","totalFgm","totalTpa","totalTpm","totalPlusMinus","i","blocks","points","steals","turnovers","totReb","fga","fgm","tpa","tpm","toFixed","playerOneAvgs","playerTwoAvgs","StatsChart","setNumGames","playerOne","playerTwo","active","setActive","combinedStats","push","x","p1Pts","p1Asts","p1Reb","p1GameId","p1Tpm","p2Pts","p2Asts","p2Reb","p2GameId","p2Tpm","e","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","Line","dataKey","stroke","XAxis","tick","YAxis","domain","Tooltip","cursor","labelFormatter","label","formatter","name","Legend","align","wrapperStyle","verticalAlign","iconType","payload","App","setPlayerOne","setPlayerTwo","setPlayerOneStats","setPlayerTwoStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84264cec.chunk.js","sourcesContent":["import React from 'react';\nimport './Search.css'\n\nconst Search = (props) => {\n\n    const {fName, lName, setfName, setlName, searchfName, searchlName, color} = props;\n    \n    return (\n    <div className=\"searches\">\n        <div className=\"col s5\">\n        <form onSubmit={searchfName}>\n            <input\n                value={fName}\n                onChange={event => setfName(event.target.value)}\n                placeholder=\"First Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-purple\" : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Go</button>\n        </form>\n        </div>\n        <p className=\"col s2 center-align\">OR</p>\n        <div className=\"col s5\">\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button className={ color == \"purple\" ? \"btn z-depth-0 waves-effect waves-purple\" : \"btn z-depth-0 waves-effect waves-green\" } type=\"submit\">Go</button>\n        </form>\n        </div>\n    </div>\n    )\n}\n\nexport default Search;","import React , { Fragment } from 'react';\nimport './Results.css'\n\nconst Results = (props) => {\n\n    const {listPlayers, searched} = props;\n\n    return (\n        <Fragment>\n            <p className=\"center-align\">Enter full first or last name</p>\n            <ul className=\"collection\">\n                { listPlayers }\n                { searched && listPlayers.length == 0 ? (\n                    <li className=\"collection-item noResults\">\n                        <p>No results found</p>\n                    </li> ) : null\n                }\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\nimport './Player.css'\n\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, teamId , setPlayer, setPlayerStats, setResults, setSearched} = props;\n\n\n    //use to show team in search results\n    const teams = {\n        1: \"ATL\",\n        2: \"BOS\",\n        4: \"BKN\",\n        5: \"CHA\",\n        6: \"CHI\",\n        7: \"CLE\",\n        8: \"DAL\",\n        9: \"DEN\",\n        10: \"DET\",\n        11: \"GSW\",\n        14: \"HOU\",\n        15: \"IND\",\n        16: \"LAC\",\n        17: \"LAL\",\n        19: \"MEM\",\n        20: \"MIA\",\n        21: \"MIL\",\n        22: \"MIN\",\n        23: \"NOP\",\n        24: \"NYK\",\n        25: \"OKC\",\n        26: \"ORL\",\n        27: \"PHI\",\n        28: \"PHX\",\n        29: \"POR\",\n        30: \"SAC\",\n        31: \"SAS\",\n        38: \"TOR\",\n        40: \"UTA\",\n        41: \"WAS\"\n    }\n\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //make stats request, return promise\n    const makeStatsRequest = () => {\n        statsOptions['url'] += id\n        const promise = axios.request(statsOptions)\n        const stats = promise.then( resp => resp.data.api.statistics)\n        .catch( err => {console.log(err)})\n        return stats;\n    }\n\n    //on player select, set player and get recent stats\n    //filtering out games in which they did not play\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(firstName + \" \" + lastName)\n        makeStatsRequest().then( (stats) => {\n            let recentStats = []\n            let lastGame = stats.length - 1\n            let enoughGames = true\n            while (recentStats.length < 25) {\n                let minPlayed = parseInt(stats[lastGame].min)\n                let game = parseInt(stats[lastGame].gameId)\n                //8784 is all-star game\n                if (minPlayed > 0 && game != 8784) {\n                    recentStats.unshift(stats[lastGame]);\n                }\n                lastGame -=1\n                //less than 25 career games played\n                if (lastGame < 0) {\n                    enoughGames = false\n                    setPlayerStats([])\n                    setPlayer(firstName + \" \" + lastName + \" (not qualified, min 25 games)\")\n                    break\n                }\n            }\n            if (enoughGames) {\n                setPlayerStats(recentStats)\n            }\n            \n        })\n        //clear results\n        setResults([])\n        setSearched(false)\n    }\n\n    //get team short name, to display in search results\n    const teamShortName = (team) => {\n        if (team in teams) {\n            return teams[team];\n        }\n        else {\n            return \"n/a\";\n        }\n    }\n\n\n    return (\n        <li className=\"collection-item\" onClick={handleClick}>\n            <p> {firstName} {lastName} \n            {/* uncomment this to show team name in search results\n            some players are in the database who are no longer in the NBA */}\n            <span className=\"secondary-content\"> { teamShortName(teamId) } </span> \n            </p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats, color} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    const [searched, setSearched] = useState(false);\n\n    let fNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n    \n    let lNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //make request by first name\n    const searchfName = event => {\n        event.preventDefault();\n\n        fNameOptions['url'] += fName;\n        axios.request(fNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            setSearched(true)\n            \n        })\n        .catch ( err => {\n            console.log(err)\n        })\n\n    }\n\n    //make request by last name\n    const searchlName = event => {\n        event.preventDefault()\n        \n        lNameOptions['url'] += lName;\n        axios.request(lNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            setSearched(true)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    } \n\n    //console.log(searched)\n\n    //convert search results to array of Players\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                    key={item.playerId}\n                    id = {item.playerId}\n                    firstName = {item.firstName}\n                    lastName = {item.lastName}\n                    teamId = {item.teamId}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                    setResults = {setResults}\n                    setSearched = {setSearched}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n\n   \n    return (\n        <Fragment>\n            <Search \n                fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchlName}\n                searchfName = {searchfName}\n                color = {color}\n            />\n            <Results \n                listPlayers = {listPlayers}\n                searched = {searched}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import React from 'react';\nimport './Averages.css'\n\nconst Averages = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames} = props;\n\n    console.log(numGames)\n\n    const calculateAvgs = (stats) => {\n        //avgs object with stats set to 0\n        let avgs = {\n            assists: 0,\n            blks: 0,\n            min: 0,\n            pts: 0,\n            stls: 0,\n            to: 0,\n            rebounds: 0,\n            totFgm: 0,\n            totFga: 0,\n            fgp: 0,\n            totTpm: 0,\n            totTpa: 0,\n            tpp: 0,\n            plusMinus: 0\n        }\n        // if stats, sum totals and calculate averages\n        if (stats.length > 0) {\n            let totalAssists = 0;\n            let totalBlks = 0;\n            let totalMin = 0;\n            let totalPts = 0;\n            let totalStls = 0;\n            let totalTo = 0;\n            let totalRebounds = 0;\n            let totalFga = 0;\n            let totalFgm = 0;\n            let totalTpa = 0;\n            let totalTpm = 0;\n            let totalPlusMinus = 0\n            //calculate totals\n            for (let i = 25 - numGames; i < stats.length; i++) {\n                totalAssists += parseInt(stats[i].assists)\n                totalBlks += parseInt(stats[i].blocks)\n                totalMin += parseInt(stats[i].min)\n                totalPts += parseInt(stats[i].points)\n                totalStls += parseInt(stats[i].steals)\n                totalTo += parseInt(stats[i].turnovers)\n                totalRebounds += parseInt(stats[i].totReb)\n                totalFga += parseInt(stats[i].fga)\n                totalFgm += parseInt(stats[i].fgm)\n                totalTpa += parseInt(stats[i].tpa)\n                totalTpm += parseInt(stats[i].tpm)\n                totalPlusMinus += parseInt(stats[i].plusMinus)\n            }\n            //average\n            avgs['assists'] = (totalAssists / numGames).toFixed(1)\n            avgs['blks'] = (totalBlks / numGames).toFixed(1)\n            avgs['min'] = (totalMin / numGames).toFixed(0)\n            avgs['pts'] = (totalPts / numGames).toFixed(1)\n            avgs['stls'] = (totalStls / numGames).toFixed(1)\n            avgs['to'] = (totalTo / numGames).toFixed(1)\n            avgs['rebounds'] = (totalRebounds / numGames).toFixed(1)\n            avgs['totFgm'] = totalFgm\n            avgs['totFga'] = totalFga\n            avgs['fgp'] = ((totalFgm / totalFga) * 100).toFixed(1)\n            avgs['totTpm'] = totalTpm\n            avgs['totTpa'] = totalTpa\n            avgs['tpp'] = ((totalTpm / totalTpa) * 100).toFixed(1)\n            avgs['plusMinus'] = totalPlusMinus\n            return avgs\n        }\n        else {\n            return avgs\n        }\n    }\n\n    let playerOneAvgs = calculateAvgs(playerOneStats)\n    let playerTwoAvgs = calculateAvgs(playerTwoStats)\n\n    return (\n        <table className=\"centered highlight\">\n            <tbody>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"pts\"] }</td>\n                    <td>PPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"pts\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"rebounds\"] }</td>\n                    <td>RPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"rebounds\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"assists\"] }</td>\n                    <td>APG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"assists\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"stls\"] }</td>\n                    <td>SPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"stls\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"blks\"] }</td>\n                    <td>BPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"blks\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"to\"] }</td>\n                    <td>TOPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"to\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"min\"] }</td>\n                    <td>MPG</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"min\"] }</td>\n                </tr>\n               {/* decided against including total shots made and attempted\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"totFgm\"] }</td>\n                    <td>FG Made</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"totFgm\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"totFga\"] }</td>\n                    <td>FG Attempted</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"totFga\"] }</td>\n                </tr> */}\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"fgp\"] }</td>\n                    <td>FG %</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"fgp\"] }</td>\n                </tr>\n                {\n                /* decided against including total shots made and attempted\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"totTpm\"] }</td>\n                    <td>3P Made</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"totTpm\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"totTpa\"] }</td>\n                    <td>3P Attempted</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"totTpa\"] }</td>\n                </tr> */}\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"tpp\"] }</td>\n                    <td>3P %</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"tpp\"] }</td>\n                </tr>\n                <tr>\n                    <td className=\"pl1\">{ playerOneAvgs[\"plusMinus\"] }</td>\n                    <td>Total +/-</td>\n                    <td className=\"pl2\">{ playerTwoAvgs[\"plusMinus\"] }</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Averages;","import axios from 'axios';\nimport React, {Fragment, useState} from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport './StatsChart.css'\n\nconst StatsChart = (props) => {\n\n    const {playerOneStats, playerTwoStats, numGames, setNumGames, playerOne, playerTwo} = props;\n\n    const [active, setActive] = useState(\"points\");\n  \n\n    \n    //make array to hold stats for chart\n    let combinedStats = []\n    \n    switch(numGames) {\n        case 5:\n            for (let i = 0; i < 5; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 10:\n            for (let i = 0; i < 10; i++) {\n                    combinedStats.push({})\n            }\n            break\n        case 25:\n            for (let i = 0; i < 25; i++) {\n                combinedStats.push({})\n            }\n            break\n        //no default \n    }\n    //populate w stats\n    //wont render the line if no stats\n    if (playerOneStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p1Pts = playerOneStats[i].points;\n            combinedStats[x].p1Asts = playerOneStats[i].assists;\n            combinedStats[x].p1Reb = playerOneStats[i].totReb;\n            combinedStats[x].p1GameId = playerOneStats[i].gameId;\n            combinedStats[x].p1Tpm = playerOneStats[i].tpm;\n            x += 1;\n            //any other stats that you want a visualization of\n            //can be added here\n        }\n    }\n    if (playerTwoStats.length > 0) {\n        let x = 0;\n        for (let i = 25 - numGames; i < 25; i++) {\n            combinedStats[x].p2Pts = playerTwoStats[i].points;\n            combinedStats[x].p2Asts = playerTwoStats[i].assists;\n            combinedStats[x].p2Reb = playerTwoStats[i].totReb;\n            combinedStats[x].p2GameId = playerTwoStats[i].gameId;\n            combinedStats[x].p2Tpm = playerTwoStats[i].tpm;\n            x += 1;\n            //any other stats that you want a visualization of\n            //can be added here\n        }\n    }\n\n    console.log(combinedStats)\n\n    const choosePoints = (e) => {\n        e.preventDefault()\n        setActive(\"points\")\n    }\n\n    const chooseRebounds = (e) => {\n        e.preventDefault()\n        setActive(\"rebounds\")\n    }\n\n    const chooseAssists = (e) => {\n        e.preventDefault()\n        setActive(\"assists\")\n    }\n\n    const chooseTpm = (e) => {\n        e.preventDefault()\n        setActive(\"3PM\")\n    }\n\n    const choose5Games = (e) => {\n        e.preventDefault()\n        setNumGames(5);\n    }\n\n    const choose10Games = (e) => {\n        e.preventDefault()\n        setNumGames(10);\n    }\n\n    const choose25Games = (e) => {\n        e.preventDefault()\n        setNumGames(25);\n    }\n\n    //edit y -axis scale based on chosen stat\n    const checkActiveStat = () => {\n        if (active == \"points\") {\n            return 70;\n        }\n        if (active == \"rebounds\") {\n            return 40;\n        }\n        if (active == \"assists\") {\n            return 30;\n        }\n        if (active == \"3PM\") {\n            return 15;\n        }\n    }\n\n    //headers for request by game, currently this request isnt being made\n    const gameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/games/gameId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    //made this function to display game date and teams played on hover of chart\n    const getGameData = (game) => {\n        gameOptions['url'] += game;\n        axios.request(gameOptions)\n        .then( (resp) => {\n            let gameData = resp.data.api.games[0]\n            let gameDate = gameData.startTimeUTC.slice(0, 10) \n            let homeTeam = gameData.hTeam.shortName\n            let awayTeam = gameData.vTeam.shortName\n            console.log([gameDate, homeTeam, awayTeam])\n            return [gameDate, homeTeam, awayTeam]\n        }) \n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"statChips center-align\">\n                <div className={ active == \"points\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={choosePoints}>\n                    Points\n                </div>\n                <div className={ active == \"rebounds\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseRebounds}>\n                    Rebounds\n                </div>\n                <div className={ active == \"assists\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseAssists}>\n                    Assists\n                </div>\n                <div className={ active == \"3PM\" ? \"chip statSelected\" : \"chip notSelected\"} onClick={chooseTpm}>\n                    3P Made\n                </div>\n                <div className = { numGames == 5 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose5Games}>\n                    Last 5 Games\n                </div>\n                <div className = { numGames == 10 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose10Games}>\n                    Last 10 Games\n                </div>\n                <div className = { numGames == 25 ? \"chip statSelected\" : \"chip notSelected\"} onClick={choose25Games}>\n                    Last 25 Games\n                </div>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={combinedStats} margin={{ top: 5, right: 50, bottom: 20, left: 0 }}>\n                    { playerOneStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Pts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"points\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Pts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Reb\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"rebounds\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Reb\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Asts\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"assists\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Asts\" stroke=\"green\" />\n                    ) : null }\n                    { playerOneStats.length > 0 && active == \"3PM\" ? (\n                    <Line type=\"monotone\" dataKey=\"p1Tpm\" stroke=\"purple\"/>\n                    ) : null }\n                    { playerTwoStats.length > 0 && active == \"3PM\" ? (\n                    <Line type=\"monotone\" dataKey=\"p2Tpm\" stroke=\"green\" />\n                    ) : null }\n                    <XAxis tick = {false} />\n                    <YAxis type=\"number\" domain={[0, checkActiveStat]}/>\n                    <Tooltip \n                        cursor={false} \n                        labelFormatter = { (label) => \"\"}\n                        formatter= { (name, value) => [name, active] }\n                        //content = { <CustomTooltip />}\n                        \n                    />\n                    <Legend \n                        align=\"center\"\n                        //added this bc legend appeared slightly off center\n                        wrapperStyle={{left: 30}}\n                        verticalAlign=\"bottom\" \n                        iconType=\"line\"\n                        payload={\n                            [\n                            { id: 'p1', value: playerOne, type: \"line\", color: 'purple' },\n                            { id: 'p2', value: playerTwo, type: 'line', color: 'green'}\n                            ]\n                        }\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </Fragment>\n    )\n}\n\nexport default StatsChart;","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport Averages from './Averages.js'\nimport StatsChart from './StatsChart.js'\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const [numGames, setNumGames] = useState(5);\n\n  const color1 = \"purple\";\n  const color2 = \"green\"\n\n\n  console.log(playerOneStats)\n  console.log(playerTwo)\n\n\n  return (\n    <div className=\"grey lighten-4\">\n      <div className=\"top\">\n        <div className=\"container\">\n          <div className=\"row mySection\">\n            <div className=\"col s12 m6 l6 p1\">\n              <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerOne}\n                  setPlayerStats={setPlayerOneStats}\n                  color={color1}\n                />\n              </div>\n            </div>\n          <div className=\"col s12 m6 l6 p2\">\n            <div className=\"card hoverable corners\">\n                <Lookup \n                  setPlayer={setPlayerTwo}\n                  setPlayerStats={setPlayerTwoStats}\n                  color={color2}\n                />\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container \">\n        <div className=\"card hoverable corners\">\n          <StatsChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n            setNumGames = {setNumGames}\n            //for legend\n            playerOne={playerOne}\n            playerTwo={playerTwo}\n          />\n        </div>\n      </div>\n      <div className=\"container mySection\">\n        <div className=\"card hoverable corners\">\n          <Averages\n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n            numGames = {numGames}\n          />\n        </div>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}