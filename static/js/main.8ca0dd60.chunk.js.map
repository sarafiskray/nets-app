{"version":3,"sources":["Lookup/Search.js","Lookup/Results.js","Lookup/Player.js","Lookup/Lookup.js","Averages.js","StatsChart.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","fName","lName","setfName","setlName","searchfName","searchlName","onSubmit","value","onChange","event","target","placeholder","className","type","Results","listPlayers","Player","id","firstName","lastName","setPlayer","teamId","setPlayerStats","statsOptions","method","url","headers","onClick","preventDefault","axios","request","then","resp","stats","data","api","statistics","recentStats","lastGameIndex","length","unshift","catch","err","console","log","Lookup","useState","results","setResults","fNameOptions","lNameOptions","map","item","playerId","players","Averages","playerOneStats","playerTwoStats","calculateAvgs","avgs","assists","blks","min","pts","stls","to","rebounds","fgp","tpp","plusMinus","totalAssists","totalBlks","totalMin","totalPts","totalStls","totalTo","totalRebounds","totalFga","totalFgm","totalTpa","totalTpm","totalPlusMinus","i","parseInt","blocks","points","steals","turnovers","totReb","fga","fgm","tpa","tpm","toFixed","playerOneAvgs","playerTwoAvgs","StatsChart","combinedStats","push","p1Pts","p1Asts","p1Reb","p2Pts","p2Asts","p2Reb","LineChart","width","height","Line","dataKey","stroke","XAxis","tick","YAxis","domain","Tooltip","cursor","App","setPlayerOne","setPlayerTwo","setPlayerOneStats","setPlayerTwoStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA6BeA,EA3BA,SAACC,GAAW,IAEhBC,EAA8DD,EAA9DC,MAAOC,EAAuDF,EAAvDE,MAAOC,EAAgDH,EAAhDG,SAAUC,EAAsCJ,EAAtCI,SAAUC,EAA4BL,EAA5BK,YAAaC,EAAeN,EAAfM,YAEtD,OACA,eAAC,WAAD,WACI,uBAAMC,SAAUF,EAAhB,UACI,uBACIG,MAAOP,EACPQ,SAAU,SAAAC,GAAK,OAAIP,EAASO,EAAMC,OAAOH,QACzCI,YAAY,eAEhB,wBAAQC,UAAU,WAAWC,KAAK,SAAlC,qCAEJ,mBAAGD,UAAU,eAAb,gBACA,uBAAMN,SAAUD,EAAhB,UACI,uBACIE,MAAON,EACPO,SAAU,SAAAC,GAAK,OAAIN,EAASM,EAAMC,OAAOH,QACzCI,YAAY,cAEhB,wBAAQC,UAAU,WAAWC,KAAK,SAAlC,wCCVGC,EAXC,SAACf,GAAW,IAEjBgB,EAAehB,EAAfgB,YAEP,OACI,6BACMA,KCsCCC,EA3CA,SAACjB,GAAW,IAEfkB,EAA+DlB,EAA/DkB,GAAIC,EAA2DnB,EAA3DmB,UAAWC,EAAgDpB,EAAhDoB,SAAmBC,GAA6BrB,EAAtCsB,OAAsCtB,EAA7BqB,WAAWE,EAAkBvB,EAAlBuB,eAE/CC,EAAe,CACjBC,OAAQ,MACRC,IAAK,iEACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,8BA0BzB,OACI,oBAAIC,QAvBY,SAAClB,GACjBA,EAAMmB,iBACNR,EAAUH,GACVM,EAAY,KAAWN,EACvBY,IAAMC,QAAQP,GACbQ,MAAO,SAAAC,GAIJ,IAHA,IAAIC,EAAQD,EAAKE,KAAKC,IAAIC,WACtBC,EAAc,GACdC,EAAgBL,EAAMM,OAAS,EAC5BF,EAAYE,OAAS,IAExBF,EAAYG,QAAQP,EAAMK,IAC1BA,GAAgB,EAEpBhB,EAAee,MAElBI,OAAQ,SAAAC,GACLC,QAAQC,IAAIF,OAMhB,SACI,kCAAKxB,EAAL,IAAiBC,QC2Dd0B,EA7FA,SAAC9C,GAAW,IAuDnBgB,EArDGK,EAA6BrB,EAA7BqB,UAAWE,EAAkBvB,EAAlBuB,eAFI,EAIIwB,mBAAS,IAJb,mBAIf9C,EAJe,KAIRE,EAJQ,OAKI4C,mBAAS,IALb,mBAKf7C,EALe,KAKRE,EALQ,OAOQ2C,mBAAS,IAPjB,mBAOfC,EAPe,KAONC,EAPM,KASlBC,EAAe,CACfzB,OAAQ,MACRC,IAAK,uDACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,8BAIrBwB,EAAe,CACf1B,OAAQ,MACRC,IAAK,sDACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,8BAqDzB,OAnBIX,EADAgC,EAAQR,OAAS,EACHQ,EAAQI,KAAM,SAAAC,GACxB,OACI,cAAC,EAAD,CAEInC,GAAMmC,EAAKC,SACXnC,UAAakC,EAAKlC,UAClBC,SAAYiC,EAAKjC,SACjBE,OAAU+B,EAAK/B,OACfD,UAAaA,EACbE,eAAkBA,GANb8B,EAAKC,aAYR,GAKd,eAAC,WAAD,WACI,cAAC,EAAD,CACIrD,MAASA,EACTC,MAASA,EACTC,SAAYA,EACZC,SAAYA,EACZE,YAzCQ,SAAAI,GAChBA,EAAMmB,iBAENsB,EAAY,KAAWjD,EACvB4B,IAAMC,QAAQoB,GACbnB,MAAO,SAAAC,GACJgB,EAAWhB,EAAKE,KAAKC,IAAImB,YAE5Bb,OAAQ,SAAAC,GACLC,QAAQC,IAAIF,OAiCRtC,YAzDQ,SAAAK,GAChBA,EAAMmB,iBAENqB,EAAY,KAAWjD,EACvB6B,IAAMC,QAAQmB,GACblB,MAAO,SAAAC,GACJgB,EAAWhB,EAAKE,KAAKC,IAAImB,YAG5Bb,OAAQ,SAAAC,GACLC,QAAQC,IAAIF,SAiDZ,cAAC,EAAD,CACI3B,YAAeA,QCmChBwC,EA9HE,SAACxD,GAAW,IAElByD,EAAkCzD,EAAlCyD,eAAgBC,EAAkB1D,EAAlB0D,eAEjBC,EAAgB,SAACzB,GAGnB,IAAI0B,EAAO,CACPC,QAAS,EACTC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,GAAI,EACJC,SAAU,EACVC,IAAK,EACLC,IAAK,EACLC,UAAW,GAEf,GAAIpC,EAAMM,OAAS,EAAG,CAclB,IAbA,IAAI+B,EAAe,EACfC,EAAY,EACZC,EAAW,EACXC,EAAW,EACXC,EAAY,EACZC,EAAU,EACVC,EAAgB,EAChBC,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAiB,EAEZC,EAAI,EAAGA,EAAIjD,EAAMM,OAAQ2C,IAC9BZ,GAAgBa,SAASlD,EAAMiD,GAAGtB,SAClCW,GAAaY,SAASlD,EAAMiD,GAAGE,QAC/BZ,GAAYW,SAASlD,EAAMiD,GAAGpB,KAC9BW,GAAYU,SAASlD,EAAMiD,GAAGG,QAC9BX,GAAaS,SAASlD,EAAMiD,GAAGI,QAC/BX,GAAWQ,SAASlD,EAAMiD,GAAGK,WAC7BX,GAAiBO,SAASlD,EAAMiD,GAAGM,QACnCX,GAAYM,SAASlD,EAAMiD,GAAGO,KAC9BX,GAAYK,SAASlD,EAAMiD,GAAGQ,KAC9BX,GAAYI,SAASlD,EAAMiD,GAAGS,KAC9BX,GAAYG,SAASlD,EAAMiD,GAAGU,KAC9BX,GAAkBE,SAASlD,EAAMiD,GAAGb,WAaxC,OAVAV,EAAI,QAAcW,EAAe,GACjCX,EAAI,KAAWY,EAAY,GAC3BZ,EAAI,IAAUa,EAAW,GACzBb,EAAI,IAAUc,EAAW,GACzBd,EAAI,KAAWe,EAAY,GAC3Bf,EAAI,GAASgB,EAAU,GACvBhB,EAAI,SAAeiB,EAAgB,GACnCjB,EAAI,KAAYmB,EAAWD,EAAY,KAAKgB,QAAQ,GACpDlC,EAAI,KAAYqB,EAAWD,EAAY,KAAKc,QAAQ,GACpDlC,EAAI,UAAgBsB,EACbtB,EAGP,OAAOA,GAIXmC,EAAgBpC,EAAcF,GAC9BuC,EAAgBrC,EAAcD,GAElC,OACI,uBAAO7C,UAAU,WAAjB,SACI,kCACI,+BACI,6BAAMkF,EAAa,MACnB,qCACA,6BAAMC,EAAa,SAEvB,+BACI,6BAAMD,EAAa,WACnB,qCACA,6BAAMC,EAAa,cAEvB,+BACI,6BAAMD,EAAa,UACnB,qCACA,6BAAMC,EAAa,aAEvB,+BACI,6BAAMD,EAAa,OACnB,qCACA,6BAAMC,EAAa,UAEvB,+BACI,6BAAMD,EAAa,OACnB,qCACA,6BAAMC,EAAa,UAEvB,+BACI,6BAAMD,EAAa,KACnB,sCACA,6BAAMC,EAAa,QAEvB,+BACI,6BAAMD,EAAa,MACnB,qCACA,6BAAMC,EAAa,SAEvB,+BACI,6BAAMD,EAAa,MACnB,sCACA,6BAAMC,EAAa,SAEvB,+BACI,6BAAMD,EAAa,MACnB,sCACA,6BAAMC,EAAa,SAEvB,+BACI,6BAAMD,EAAa,YACnB,2CACA,6BAAMC,EAAa,qB,4CCpExBC,EAlDI,SAACjG,GAQhB,IAR2B,IAEpByD,EAAmCzD,EAAnCyD,eAAgBC,EAAmB1D,EAAnB0D,eAKnBwC,EAAgB,GACXf,EAAI,EAAGA,EAAI,GAAIA,IAChBe,EAAcC,KAAK,IAI3B,GAAI1C,EAAejB,OAAS,EACxB,IAAK,IAAI2C,EAAI,EAAGA,EAAI,GAAIA,IACpBe,EAAcf,GAAGiB,MAAQ3C,EAAe0B,GAAGG,OAC3CY,EAAcf,GAAGkB,OAAS5C,EAAe0B,GAAGtB,QAC5CqC,EAAcf,GAAGmB,MAAQ7C,EAAe0B,GAAGM,OAInD,GAAI/B,EAAelB,OAAS,EACxB,IAAK,IAAI2C,EAAI,EAAGA,EAAI,GAAIA,IACpBe,EAAcf,GAAGoB,MAAQ7C,EAAeyB,GAAGG,OAC3CY,EAAcf,GAAGqB,OAAS9C,EAAeyB,GAAGtB,QAC5CqC,EAAcf,GAAGsB,MAAQ/C,EAAeyB,GAAGM,OAUnD,OALA7C,QAAQC,IAAIqD,GAMR,eAACQ,EAAA,EAAD,CAAWC,MAAO,IAAKC,OAAU,IAAKzE,KAAM+D,EAA5C,UACMzC,EAAejB,OAAS,EAC1B,cAACqE,EAAA,EAAD,CAAM/F,KAAK,WAAWgG,QAAQ,QAAQC,OAAO,WACzC,KACFrD,EAAelB,OAAS,EAC1B,cAACqE,EAAA,EAAD,CAAM/F,KAAK,WAAWgG,QAAQ,QAAQC,OAAO,UACzC,KACJ,cAACC,EAAA,EAAD,CAAOC,MAAQ,IACf,cAACC,EAAA,EAAD,CAAOpG,KAAK,SAASqG,OAAQ,CAAC,EAAG,MACjC,cAACC,EAAA,EAAD,CAASC,QAAQ,QCKdC,MA/Cf,WAAgB,IAAD,EAEqBvE,mBAAS,GAF9B,mBAEKwE,GAFL,aAGqBxE,mBAAS,GAH9B,mBAGKyE,GAHL,aAK+BzE,mBAAS,IALxC,mBAKNU,EALM,KAKUgE,EALV,OAM+B1E,mBAAS,IANxC,mBAMNW,EANM,KAMUgE,EANV,KAab,OAFA9E,QAAQC,IAAIY,GAGV,sBAAK5C,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,CACEQ,UAAWkG,EACXhG,eAAgBkG,MAGpB,qBAAK5G,UAAU,mBAAf,SACE,cAAC,EAAD,CACEQ,UAAWmG,EACXjG,eAAgBmG,SAItB,qBAAK7G,UAAU,YAAf,SACI,cAAC,EAAD,CACE4C,eAAgBA,EAChBC,eAAgBA,MAGtB,qBAAK7C,UAAU,gBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CACE4C,eAAgBA,EAChBC,eAAgBA,YCjCbiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7F,MAAK,YAAkD,IAA/C8F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ca0dd60.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst Search = (props) => {\n\n    const {fName, lName, setfName, setlName, searchfName, searchlName} = props;\n    \n    return (\n    <Fragment>\n        <form onSubmit={searchfName}>\n            <input\n                value={fName}\n                onChange={event => setfName(event.target.value)}\n                placeholder=\"First Name\"\n            />\n            <button className=\"btn grey\" type=\"submit\">Search by first name</button>\n        </form>\n        <p className=\"center-align\">OR</p>\n        <form onSubmit={searchlName}>\n            <input\n                value={lName}\n                onChange={event => setlName(event.target.value)}\n                placeholder=\"Last Name\"\n            />\n            <button className=\"btn grey\" type=\"submit\">Search by last name</button>\n        </form>\n    </Fragment>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Results = (props) => {\n\n    const {listPlayers} = props;\n\n    return(\n        <ul>\n            { listPlayers }\n        </ul>\n    )\n}\n\nexport default Results;","import axios from 'axios';\nimport React from 'react';\n\nconst Player = (props) => {\n\n    const { id, firstName, lastName, teamId , setPlayer, setPlayerStats} = props;\n\n    const statsOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/statistics/players/playerId/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        setPlayer(id)\n        statsOptions['url'] += id\n        axios.request(statsOptions)\n        .then ( resp => {\n            let stats = resp.data.api.statistics\n            let recentStats = []\n            let lastGameIndex = stats.length - 1\n            while (recentStats.length < 10) {\n                //still need to check if player played in game + all star\n                recentStats.unshift(stats[lastGameIndex])\n                lastGameIndex -=1\n            }\n            setPlayerStats(recentStats)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    }\n\n\n    return (\n        <li onClick={handleClick}>\n            <p> {firstName} {lastName}</p>\n        </li>\n    )\n\n}\n\nexport default Player;","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Search from './Search.js'\nimport Results from './Results.js'\nimport Player from './Player.js'\n\nconst Lookup = (props) => {\n\n    const {setPlayer, setPlayerStats} = props;\n\n    const [fName, setfName] = useState('');\n    const [lName, setlName] = useState('');\n\n    const [results, setResults] = useState([]);\n\n    let fNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/firstName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n    \n    let lNameOptions = {\n        method: 'GET',\n        url: 'https://api-nba-v1.p.rapidapi.com/players/lastName/',\n        headers: {\n          'x-rapidapi-key': 'ac51f32be0msh667db546ecb476ep1e1b64jsna2067267cb56',\n          'x-rapidapi-host': 'api-nba-v1.p.rapidapi.com'\n        }\n      };\n\n    const searchfName = event => {\n        event.preventDefault();\n\n        fNameOptions['url'] += fName;\n        axios.request(fNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n            \n        })\n        .catch ( err => {\n            console.log(err)\n        })\n\n    }\n\n    const searchlName = event => {\n        event.preventDefault()\n        \n        lNameOptions['url'] += lName;\n        axios.request(lNameOptions)\n        .then ( resp => {\n            setResults(resp.data.api.players)\n        })\n        .catch ( err => {\n            console.log(err)\n        })\n    } \n\n    let listPlayers\n    if (results.length > 0) {\n        listPlayers = results.map ( item => {\n            return (\n                <Player \n                    key={item.playerId}\n                    id = {item.playerId}\n                    firstName = {item.firstName}\n                    lastName = {item.lastName}\n                    teamId = {item.teamId}\n                    setPlayer = {setPlayer}\n                    setPlayerStats = {setPlayerStats}\n                />\n            )\n        })  \n    } \n    else {\n        listPlayers = []\n    }\n    //console.log(listPlayers)\n   \n    return (\n        <Fragment>\n            <Search \n                fName = {fName}\n                lName = {lName}\n                setfName = {setfName}\n                setlName = {setlName}\n                searchlName = {searchlName}\n                searchfName = {searchfName}\n            />\n            <Results \n                listPlayers = {listPlayers}\n            />\n        </Fragment>\n    )\n}\n\nexport default Lookup;\n","import React from 'react';\n\nconst Averages = (props) => {\n\n    const {playerOneStats, playerTwoStats} = props;\n\n    const calculateAvgs = (stats) => {\n        //think about what to return if no player is selected\n        //empty object or object with all stats set to zero\n        let avgs = {\n            assists: 0,\n            blks: 0,\n            min: 0,\n            pts: 0,\n            stls: 0,\n            to: 0,\n            rebounds: 0,\n            fgp: 0,\n            tpp: 0,\n            plusMinus: 0\n        }\n        if (stats.length > 0) {\n            let totalAssists = 0;\n            let totalBlks = 0;\n            let totalMin = 0;\n            let totalPts = 0;\n            let totalStls = 0;\n            let totalTo = 0;\n            let totalRebounds = 0;\n            let totalFga = 0;\n            let totalFgm = 0;\n            let totalTpa = 0;\n            let totalTpm = 0;\n            let totalPlusMinus = 0\n            //calculate totals\n            for (let i = 0; i < stats.length; i++) {\n                totalAssists += parseInt(stats[i].assists)\n                totalBlks += parseInt(stats[i].blocks)\n                totalMin += parseInt(stats[i].min)\n                totalPts += parseInt(stats[i].points)\n                totalStls += parseInt(stats[i].steals)\n                totalTo += parseInt(stats[i].turnovers)\n                totalRebounds += parseInt(stats[i].totReb)\n                totalFga += parseInt(stats[i].fga)\n                totalFgm += parseInt(stats[i].fgm)\n                totalTpa += parseInt(stats[i].tpa)\n                totalTpm += parseInt(stats[i].tpm)\n                totalPlusMinus += parseInt(stats[i].plusMinus)\n            }\n            //change to div by numGames\n            avgs['assists'] = totalAssists / 10\n            avgs['blks'] = totalBlks / 10\n            avgs['min'] = totalMin / 10\n            avgs['pts'] = totalPts / 10\n            avgs['stls'] = totalStls / 10\n            avgs['to'] = totalTo / 10\n            avgs['rebounds'] = totalRebounds / 10\n            avgs['fgp'] = ((totalFgm / totalFga) * 100).toFixed(1)\n            avgs['tpp'] = ((totalTpm / totalTpa) * 100).toFixed(1)\n            avgs['plusMinus'] = totalPlusMinus\n            return avgs\n        }\n        else {\n            return avgs\n        }\n    }\n\n    let playerOneAvgs = calculateAvgs(playerOneStats)\n    let playerTwoAvgs = calculateAvgs(playerTwoStats)\n\n    return (\n        <table className=\"centered\">\n            <tbody>\n                <tr>\n                    <td>{ playerOneAvgs[\"pts\"] }</td>\n                    <td>PPG</td>\n                    <td>{ playerTwoAvgs[\"pts\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"rebounds\"] }</td>\n                    <td>RPG</td>\n                    <td>{ playerTwoAvgs[\"rebounds\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"assists\"] }</td>\n                    <td>APG</td>\n                    <td>{ playerTwoAvgs[\"assists\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"stls\"] }</td>\n                    <td>SPG</td>\n                    <td>{ playerTwoAvgs[\"stls\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"blks\"] }</td>\n                    <td>BPG</td>\n                    <td>{ playerTwoAvgs[\"blks\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"to\"] }</td>\n                    <td>TOPG</td>\n                    <td>{ playerTwoAvgs[\"to\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"min\"] }</td>\n                    <td>MPG</td>\n                    <td>{ playerTwoAvgs[\"min\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"fgp\"] }</td>\n                    <td>FG %</td>\n                    <td>{ playerTwoAvgs[\"fgp\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"tpp\"] }</td>\n                    <td>3P %</td>\n                    <td>{ playerTwoAvgs[\"tpp\"] }</td>\n                </tr>\n                <tr>\n                    <td>{ playerOneAvgs[\"plusMinus\"] }</td>\n                    <td>Total +/-</td>\n                    <td>{ playerTwoAvgs[\"plusMinus\"] }</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Averages;","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\n\nconst StatsChart = (props) => {\n\n    const {playerOneStats, playerTwoStats } = props;\n\n  \n\n    //make empty array\n    let combinedStats = []\n    for (let i = 0; i < 10; i++) {\n            combinedStats.push({})\n    }\n    //populate w stats\n    //wont render the line if no stats\n    if (playerOneStats.length > 0) {\n        for (let i = 0; i < 10; i++) {\n            combinedStats[i].p1Pts = playerOneStats[i].points;\n            combinedStats[i].p1Asts = playerOneStats[i].assists;\n            combinedStats[i].p1Reb = playerOneStats[i].totReb;\n            //can always add more\n        }\n    }\n    if (playerTwoStats.length > 0) {\n        for (let i = 0; i < 10; i++) {\n            combinedStats[i].p2Pts = playerTwoStats[i].points;\n            combinedStats[i].p2Asts = playerTwoStats[i].assists;\n            combinedStats[i].p2Reb = playerTwoStats[i].totReb;\n            //can always add more\n        }\n    }\n\n    console.log(combinedStats)\n\n    \n    //use playerOneStats.length > 0 : jsx\n\n    return (\n        <LineChart width={800} height = {400} data={combinedStats}>\n            { playerOneStats.length > 0 ? (\n            <Line type=\"monotone\" dataKey=\"p1Pts\" stroke=\"purple\"/>\n            ) : null }\n            { playerTwoStats.length > 0 ? (\n            <Line type=\"monotone\" dataKey=\"p2Pts\" stroke=\"green\" />\n            ) : null }\n            <XAxis tick = {false} />\n            <YAxis type=\"number\" domain={[0, 80]}/>\n            <Tooltip cursor={false} />\n        </LineChart>\n    )\n}\n\nexport default StatsChart;","import './App.css';\nimport Lookup from './Lookup/Lookup.js';\nimport React, { useState } from 'react';\nimport Averages from './Averages.js'\nimport StatsChart from './StatsChart.js'\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState(0);\n  const [playerTwo, setPlayerTwo] = useState(0);\n\n  const [playerOneStats, setPlayerOneStats] = useState([]);\n  const [playerTwoStats, setPlayerTwoStats] = useState([]);\n\n  //filter by number of games\n  const numGames = 10;\n\n  console.log(playerOneStats)\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mySection\">\n        <div className=\"col s12 m6 l6 p1\">\n          <Lookup \n            setPlayer={setPlayerOne}\n            setPlayerStats={setPlayerOneStats}\n          />\n        </div>\n        <div className=\"col s12 m6 l6 p2\">\n          <Lookup \n            setPlayer={setPlayerTwo}\n            setPlayerStats={setPlayerTwoStats}\n          />\n        </div>\n      </div>\n      <div className=\"mySection\">\n          <StatsChart \n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n          />\n      </div>\n      <div className=\"row mySection\">\n        <div className=\"col s12\">\n          <Averages\n            playerOneStats={playerOneStats}\n            playerTwoStats={playerTwoStats}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}